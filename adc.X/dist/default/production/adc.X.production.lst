

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Dec  3 12:43:47 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  000D                     	;# 
    25  000E                     	;# 
    26  000E                     	;# 
    27  000F                     	;# 
    28  0010                     	;# 
    29  0011                     	;# 
    30  0012                     	;# 
    31  0013                     	;# 
    32  0014                     	;# 
    33  0015                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001B                     	;# 
    41  001B                     	;# 
    42  001C                     	;# 
    43  001D                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  0086                     	;# 
    49  0087                     	;# 
    50  0088                     	;# 
    51  0089                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  008F                     	;# 
    56  0090                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0093                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0097                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009A                     	;# 
    69  009B                     	;# 
    70  009C                     	;# 
    71  009D                     	;# 
    72  009E                     	;# 
    73  009F                     	;# 
    74  0105                     	;# 
    75  0107                     	;# 
    76  0108                     	;# 
    77  0109                     	;# 
    78  010C                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  0185                     	;# 
    84  0187                     	;# 
    85  0188                     	;# 
    86  0189                     	;# 
    87  018C                     	;# 
    88  018D                     	;# 
    89  001F                     _ADCON0bits	set	31
    90  001E                     _ADRESH	set	30
    91  000C                     _PIR1bits	set	12
    92  0018                     _RCSTAbits	set	24
    93  0019                     _TXREG	set	25
    94  009F                     _ADCON1bits	set	159
    95  009E                     _ADRESL	set	158
    96  0099                     _SPBRG	set	153
    97  0085                     _TRISA	set	133
    98  0098                     _TXSTAbits	set	152
    99  0188                     _ANSEL	set	392
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  07FC                     start_initialization:	
   105  07FC                     __initialization:	
   106  07FC                     end_of_initialization:	
   107                           ;End of C runtime variable initialization code
   108                           
   109  07FC                     __end_of__initialization:	
   110  07FC  0183               	clrf	3
   111  07FD  120A  118A  2FC1   	ljmp	_main	;jump to C main() function
   112                           
   113                           	psect	cstackCOMMON
   114  0070                     __pcstackCOMMON:	
   115  0070                     ?_initUSART:	
   116  0070                     ??_initUSART:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0070                     ?_initADC:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ??_initADC:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     ?_escribeUSART:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ??_escribeUSART:	
   129                           ; 0 bytes @ 0x0
   130                           
   131  0070                     ?_main:	
   132                           ; 0 bytes @ 0x0
   133                           
   134  0070                     escribeUSART@dato:	
   135                           ; 0 bytes @ 0x0
   136                           
   137                           
   138                           ; 1 bytes @ 0x0
   139  0070                     	ds	1
   140  0071                     ??_main:	
   141                           
   142                           ; 0 bytes @ 0x1
   143  0071                     	ds	3
   144  0074                     main@msb:	
   145                           
   146                           ; 1 bytes @ 0x4
   147  0074                     	ds	1
   148  0075                     main@lsb:	
   149                           
   150                           ; 1 bytes @ 0x5
   151  0075                     	ds	1
   152                           
   153                           	psect	maintext
   154  07C1                     __pmaintext:	
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 11 in file "adc1.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;  lsb             1    5[COMMON] unsigned char 
   165 ;;  msb             1    4[COMMON] unsigned char 
   166 ;; Return value:  Size  Location     Type
   167 ;;		None               void
   168 ;; Registers used:
   169 ;;		wreg, status,2, status,0, pclath, cstack
   170 ;; Tracked objects:
   171 ;;		On entry : B00/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   175 ;;      Params:         0       0       0       0       0
   176 ;;      Locals:         2       0       0       0       0
   177 ;;      Temps:          3       0       0       0       0
   178 ;;      Totals:         5       0       0       0       0
   179 ;;Total ram usage:        5 bytes
   180 ;; Hardware stack levels required when called:    1
   181 ;; This function calls:
   182 ;;		_escribeUSART
   183 ;;		_initADC
   184 ;;		_initUSART
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           
   191                           ;psect for function _main
   192  07C1                     _main:	
   193                           
   194                           ;adc1.c: 12: unsigned char msb, lsb;
   195                           ;adc1.c: 13: initUSART();
   196                           
   197                           ;incstack = 0
   198                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   199  07C1  120A  118A  279B  120A  118A  	fcall	_initUSART
   200                           
   201                           ;adc1.c: 14: initADC();
   202  07C6  120A  118A  27A8  120A  118A  	fcall	_initADC
   203  07CB                     l543:	
   204                           ;adc1.c: 15: while (1) {
   205                           
   206                           
   207                           ;adc1.c: 16: _delay((unsigned long)((5000)*(4000000/4000.0)));
   208  07CB  301A               	movlw	26
   209  07CC  00F3               	movwf	??_main+2
   210  07CD  305E               	movlw	94
   211  07CE  00F2               	movwf	??_main+1
   212  07CF  3086               	movlw	134
   213  07D0  00F1               	movwf	??_main
   214  07D1                     u37:	
   215  07D1  0BF1               	decfsz	??_main,f
   216  07D2  2FD1               	goto	u37
   217  07D3  0BF2               	decfsz	??_main+1,f
   218  07D4  2FD1               	goto	u37
   219  07D5  0BF3               	decfsz	??_main+2,f
   220  07D6  2FD1               	goto	u37
   221  07D7  0000               	nop
   222                           
   223                           ;adc1.c: 18: ADCON0bits.GO = 1;
   224  07D8  1283               	bcf	3,5	;RP0=0, select bank0
   225  07D9  1303               	bcf	3,6	;RP1=0, select bank0
   226  07DA  149F               	bsf	31,1	;volatile
   227  07DB                     l36:	
   228                           ;adc1.c: 20: while (PIR1bits.ADIF != 1) {
   229                           
   230  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   231  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   232  07DD  1B0C               	btfsc	12,6	;volatile
   233  07DE  2FE1               	goto	l547
   234                           
   235                           ;adc1.c: 22: __nop();
   236  07DF  0000               	nop
   237  07E0  2FDB               	goto	l36
   238  07E1                     l547:	
   239                           
   240                           ;adc1.c: 23: }
   241                           ;adc1.c: 25: msb = (ADRESH & 0b00000011);
   242  07E1  081E               	movf	30,w	;volatile
   243  07E2  3903               	andlw	3
   244  07E3  00F1               	movwf	??_main
   245  07E4  0871               	movf	??_main,w
   246  07E5  00F4               	movwf	main@msb
   247                           
   248                           ;adc1.c: 26: escribeUSART(msb);
   249  07E6  0874               	movf	main@msb,w
   250  07E7  120A  118A  2791  120A  118A  	fcall	_escribeUSART
   251                           
   252                           ;adc1.c: 27: escribeUSART(lsb);
   253  07EC  0875               	movf	main@lsb,w
   254  07ED  120A  118A  2791  120A  118A  	fcall	_escribeUSART
   255                           
   256                           ;adc1.c: 28: lsb = ADRESL;
   257  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   258  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   259  07F4  081E               	movf	30,w	;volatile
   260  07F5  00F1               	movwf	??_main
   261  07F6  0871               	movf	??_main,w
   262  07F7  00F5               	movwf	main@lsb
   263                           
   264                           ;adc1.c: 31: PIR1bits.ADIF = 0;
   265  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   266  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   267  07FA  130C               	bcf	12,6	;volatile
   268  07FB  2FCB               	goto	l543
   269  07FC                     __end_of_main:	
   270                           
   271                           	psect	text1
   272  079B                     __ptext1:	
   273 ;; *************** function _initUSART *****************
   274 ;; Defined at:
   275 ;;		line 36 in file "adc1.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;		None               void
   282 ;; Registers used:
   283 ;;		wreg
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _initUSART
   304  079B                     _initUSART:	
   305                           
   306                           ;adc1.c: 37: SPBRG = 25;
   307                           
   308                           ;incstack = 0
   309                           ; Regs used in _initUSART: [wreg]
   310  079B  3019               	movlw	25
   311  079C  1683               	bsf	3,5	;RP0=1, select bank1
   312  079D  1303               	bcf	3,6	;RP1=0, select bank1
   313  079E  0099               	movwf	25	;volatile
   314                           
   315                           ;adc1.c: 38: RCSTAbits.SPEN = 1;
   316  079F  1283               	bcf	3,5	;RP0=0, select bank0
   317  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   318  07A1  1798               	bsf	24,7	;volatile
   319                           
   320                           ;adc1.c: 39: RCSTAbits.CREN = 1;
   321  07A2  1618               	bsf	24,4	;volatile
   322                           
   323                           ;adc1.c: 40: TXSTAbits.TXEN = 1;
   324  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   325  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   326  07A5  1698               	bsf	24,5	;volatile
   327                           
   328                           ;adc1.c: 41: TXSTAbits.BRGH = 1;
   329  07A6  1518               	bsf	24,2	;volatile
   330  07A7  0008               	return
   331  07A8                     __end_of_initUSART:	
   332                           
   333                           	psect	text2
   334  07A8                     __ptext2:	
   335 ;; *************** function _initADC *****************
   336 ;; Defined at:
   337 ;;		line 44 in file "adc1.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;		None               void
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   351 ;;      Params:         0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _initADC
   366  07A8                     _initADC:	
   367                           
   368                           ;adc1.c: 46: TRISA = 0xFF;
   369                           
   370                           ;incstack = 0
   371                           ; Regs used in _initADC: [wreg+status,2+status,0]
   372  07A8  30FF               	movlw	255
   373  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   374  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   375  07AB  0085               	movwf	5	;volatile
   376                           
   377                           ;adc1.c: 47: ANSEL = 1;
   378  07AC  3001               	movlw	1
   379  07AD  1683               	bsf	3,5	;RP0=1, select bank3
   380  07AE  1703               	bsf	3,6	;RP1=1, select bank3
   381  07AF  0088               	movwf	8	;volatile
   382                           
   383                           ;adc1.c: 50: ADCON0bits.ADCS = 0b01;
   384  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   385  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   386  07B2  081F               	movf	31,w	;volatile
   387  07B3  393F               	andlw	-193
   388  07B4  3840               	iorlw	64
   389  07B5  009F               	movwf	31	;volatile
   390                           
   391                           ;adc1.c: 52: ADCON0bits.CHS = 0b0001;
   392  07B6  081F               	movf	31,w	;volatile
   393  07B7  39C3               	andlw	-61
   394  07B8  3804               	iorlw	4
   395  07B9  009F               	movwf	31	;volatile
   396                           
   397                           ;adc1.c: 54: ADCON0bits.ADON = 1;
   398  07BA  141F               	bsf	31,0	;volatile
   399                           
   400                           ;adc1.c: 57: ADCON1bits.ADFM = 1;
   401  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   402  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   403  07BD  179F               	bsf	31,7	;volatile
   404                           
   405                           ;adc1.c: 59: ADCON1bits.VCFG1 = 0;
   406  07BE  129F               	bcf	31,5	;volatile
   407                           
   408                           ;adc1.c: 60: ADCON1bits.VCFG0 = 0;
   409  07BF  121F               	bcf	31,4	;volatile
   410  07C0  0008               	return
   411  07C1                     __end_of_initADC:	
   412                           
   413                           	psect	text3
   414  0791                     __ptext3:	
   415 ;; *************** function _escribeUSART *****************
   416 ;; Defined at:
   417 ;;		line 63 in file "adc1.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;  dato            1    wreg     unsigned char 
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  dato            1    0[COMMON] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;		None               void
   424 ;; Registers used:
   425 ;;		wreg
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         1       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0
   434 ;;      Totals:         1       0       0       0       0
   435 ;;Total ram usage:        1 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; This function calls:
   438 ;;		Nothing
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _escribeUSART
   446  0791                     _escribeUSART:	
   447                           
   448                           ;incstack = 0
   449                           ; Regs used in _escribeUSART: [wreg]
   450                           ;escribeUSART@dato stored from wreg
   451  0791  00F0               	movwf	escribeUSART@dato
   452  0792                     l50:	
   453                           ;adc1.c: 64: while (PIR1bits.TXIF != 1) {
   454                           
   455  0792  1283               	bcf	3,5	;RP0=0, select bank0
   456  0793  1303               	bcf	3,6	;RP1=0, select bank0
   457  0794  1A0C               	btfsc	12,4	;volatile
   458  0795  2F98               	goto	l539
   459                           
   460                           ;adc1.c: 65: __nop();
   461  0796  0000               	nop
   462  0797  2F92               	goto	l50
   463  0798                     l539:	
   464                           
   465                           ;adc1.c: 66: }
   466                           ;adc1.c: 67: TXREG = dato;
   467  0798  0870               	movf	escribeUSART@dato,w
   468  0799  0099               	movwf	25	;volatile
   469  079A  0008               	return
   470  079B                     __end_of_escribeUSART:	
   471  007E                     btemp	set	126	;btemp
   472  007E                     wtemp	set	126
   473  007E                     wtemp0	set	126
   474  0080                     wtemp1	set	128
   475  0082                     wtemp2	set	130
   476  0084                     wtemp3	set	132
   477  0086                     wtemp4	set	134
   478  0088                     wtemp5	set	136
   479  007F                     wtemp6	set	127
   480  007E                     ttemp	set	126
   481  007E                     ttemp0	set	126
   482  0081                     ttemp1	set	129
   483  0084                     ttemp2	set	132
   484  0087                     ttemp3	set	135
   485  007F                     ttemp4	set	127
   486  007E                     ltemp	set	126
   487  007E                     ltemp0	set	126
   488  0082                     ltemp1	set	130
   489  0086                     ltemp2	set	134
   490  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_escribeUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      45
                                              1 COMMON     5     5      0
                       _escribeUSART
                            _initADC
                          _initUSART
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _escribeUSART                                         1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _escribeUSART
   _initADC
   _initUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Dec  3 12:43:47 2018

                     l50 0792                       l36 07DB                       u37 07D1  
                    l543 07CB                      l539 0798                      l547 07E1  
                   _main 07C1                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
          ?_escribeUSART 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 0188                    _SPBRG 0099                    _TRISA 0085  
                  _TXREG 0019          __end_of_initADC 07C1                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC           ??_escribeUSART 0070  
           __end_of_main 07FC                   ??_main 0071                   _ADRESH 001E  
                 _ADRESL 009E                ??_initADC 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070     __end_of_escribeUSART 079B       __size_of_initUSART 000D  
             __pmaintext 07C1        __end_of_initUSART 07A8                  __ptext1 079B  
                __ptext2 07A8                  __ptext3 0791                  _initADC 07A8  
                main@lsb 0075                  main@msb 0074     end_of_initialization 07FC  
              _RCSTAbits 0018         escribeUSART@dato 0070    __size_of_escribeUSART 000A  
              _TXSTAbits 0098             _escribeUSART 0791      start_initialization 07FC  
              ___latbits 0002   __CFG_FOSC$INTRC_CLKOUT 0000                 ?_initADC 0070  
              _initUSART 079B                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F               ?_initUSART 0070         __size_of_initADC 0019  
          __size_of_main 003B              ??_initUSART 0070  
