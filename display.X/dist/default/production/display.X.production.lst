

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov  8 23:14:31 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0093                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  0105                     	;# 
    81  0107                     	;# 
    82  0108                     	;# 
    83  0109                     	;# 
    84  010C                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  010E                     	;# 
    88  010F                     	;# 
    89  0185                     	;# 
    90  0187                     	;# 
    91  0188                     	;# 
    92  0189                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95                           
    96                           	psect	idataBANK0
    97  05DF                     __pidataBANK0:	
    98                           
    99                           ;initializer for main@F1715
   100  05DF  3420               	retlw	32
   101  05E0  344D               	retlw	77
   102  05E1  3469               	retlw	105
   103  05E2  3463               	retlw	99
   104  05E3  3472               	retlw	114
   105  05E4  346F               	retlw	111
   106  05E5  3473               	retlw	115
   107  05E6  3420               	retlw	32
   108  05E7  342D               	retlw	45
   109  05E8  3420               	retlw	32
   110  05E9  3456               	retlw	86
   111  05EA  3445               	retlw	69
   112  05EB  344D               	retlw	77
   113  05EC  344D               	retlw	77
   114  05ED  3400               	retlw	0
   115                           
   116                           ;initializer for main@F1713
   117  05EE  3420               	retlw	32
   118  05EF  3420               	retlw	32
   119  05F0  3449               	retlw	73
   120  05F1  3450               	retlw	80
   121  05F2  344E               	retlw	78
   122  05F3  3420               	retlw	32
   123  05F4  342D               	retlw	45
   124  05F5  3420               	retlw	32
   125  05F6  3445               	retlw	69
   126  05F7  3453               	retlw	83
   127  05F8  3443               	retlw	67
   128  05F9  344F               	retlw	79
   129  05FA  344D               	retlw	77
   130  05FB  3400               	retlw	0
   131  0008                     _PORTD	set	8
   132  0009                     _PORTEbits	set	9
   133  0088                     _TRISD	set	136
   134  0089                     _TRISE	set	137
   135  0188                     _ANSEL	set	392
   136                           
   137                           	psect	strings
   138  0003                     __pstrings:	
   139  0003                     stringtab:	
   140  0003                     __stringtab:	
   141                           
   142                           ;	String table - string pointers are 1 byte each
   143  0003  1BFF               	btfsc	btemp+1,7
   144  0004  280D               	ljmp	stringcode
   145  0005  1383               	bcf	3,7
   146  0006  187F               	btfsc	btemp+1,0
   147  0007  1783               	bsf	3,7
   148  0008  0800               	movf	0,w
   149  0009  0A84               	incf	4,f
   150  000A  1903               	skipnz
   151  000B  0AFF               	incf	btemp+1,f
   152  000C  0008               	return
   153  000D                     stringcode:	
   154  000D                     stringdir:	
   155  000D  3000               	movlw	high stringdir
   156  000E  008A               	movwf	10
   157  000F  0804               	movf	4,w
   158  0010  0A84               	incf	4,f
   159  0011  0782               	addwf	2,f
   160  0012                     __stringbase:	
   161  0012  3400               	retlw	0
   162  0013                     __end_of__stringtab:	
   163  0013                     STR_3:	
   164  0013  3428               	retlw	40	;'('
   165  0014  346E               	retlw	110	;'n'
   166  0015  3475               	retlw	117	;'u'
   167  0016  346C               	retlw	108	;'l'
   168  0017  346C               	retlw	108	;'l'
   169  0018  3429               	retlw	41	;')'
   170  0019  3400               	retlw	0
   171  001A                     STR_1:	
   172  001A  3425               	retlw	37	;'%'
   173  001B  3473               	retlw	115	;'s'
   174  001C  3400               	retlw	0
   175  001A                     
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  07F0                     start_initialization:	
   180  07F0                     __initialization:	
   181                           
   182                           ; Initialize objects allocated to BANK0
   183  07F0  1383               	bcf	3,7	;select IRP bank0
   184  07F1  3062               	movlw	low (__pdataBANK0+29)
   185  07F2  00FD               	movwf	btemp+-1
   186  07F3  3005               	movlw	high __pidataBANK0
   187  07F4  00FE               	movwf	btemp
   188  07F5  30DF               	movlw	low __pidataBANK0
   189  07F6  00FF               	movwf	btemp+1
   190  07F7  3045               	movlw	low __pdataBANK0
   191  07F8  0084               	movwf	4
   192  07F9  120A  118A  25D2   	fcall	init_ram0
   193  07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196  07FC                     __end_of__initialization:	
   197  07FC  0183               	clrf	3
   198  07FD  120A  118A  2F28   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	dataBANK0
   201  0045                     __pdataBANK0:	
   202  0045                     main@F1715:	
   203  0045                     	ds	15
   204  0054                     main@F1713:	
   205  0054                     	ds	14
   206                           
   207                           	psect	inittext
   208  05CE                     init_fetch0:	
   209                           ;	Called with low address in FSR and high address in W
   210                           
   211  05CE  087E               	movf	126,w
   212  05CF  008A               	movwf	10
   213  05D0  087F               	movf	127,w
   214  05D1  0082               	movwf	2
   215  05D2                     init_ram0:	
   216                           ;Called with:
   217                           ;	high address of idata address in btemp 
   218                           ;	low address of idata address in btemp+1 
   219                           ;	low address of data in FSR
   220                           ;	high address + 1 of data in btemp-1
   221                           
   222  05D2  25CE  120A  118A   	fcall	init_fetch0
   223  05D5  0080               	movwf	0
   224  05D6  0A84               	incf	4,f
   225  05D7  0804               	movf	4,w
   226  05D8  067D               	xorwf	125,w
   227  05D9  1903               	btfsc	3,2
   228  05DA  3400               	retlw	0
   229  05DB  0AFF               	incf	127,f
   230  05DC  1903               	btfsc	3,2
   231  05DD  0AFE               	incf	126,f
   232  05DE  2DD2               	goto	init_ram0
   233                           
   234                           	psect	cstackCOMMON
   235  0070                     __pcstackCOMMON:	
   236  0070                     ?_confBusLCD:	
   237  0070                     ??_confBusLCD:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_comando:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ??_comando:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_putch:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ??_putch:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_main:	
   253                           ; 0 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	2
   258  0072                     confBusLCD@estado:	
   259  0072                     comando@estado:	
   260                           ; 2 bytes @ 0x2
   261                           
   262  0072                     putch@estado:	
   263                           ; 2 bytes @ 0x2
   264                           
   265                           
   266                           ; 2 bytes @ 0x2
   267  0072                     	ds	2
   268  0074                     comando@com:	
   269  0074                     putch@dat:	
   270                           ; 1 bytes @ 0x4
   271                           
   272  0074                     confBusLCD@t:	
   273                           ; 1 bytes @ 0x4
   274                           
   275                           
   276                           ; 2 bytes @ 0x4
   277  0074                     	ds	1
   278  0075                     comando@t:	
   279  0075                     putch@t:	
   280                           ; 2 bytes @ 0x5
   281                           
   282                           
   283                           ; 2 bytes @ 0x5
   284  0075                     	ds	2
   285  0077                     ?_printf:	
   286                           
   287                           ; 2 bytes @ 0x7
   288  0077                     	ds	1
   289  0078                     ??_printf:	
   290                           
   291                           ; 0 bytes @ 0x8
   292  0078                     	ds	1
   293  0079                     ??_main:	
   294                           
   295                           ; 0 bytes @ 0x9
   296  0079                     	ds	4
   297                           
   298                           	psect	cstackBANK0
   299  0020                     __pcstackBANK0:	
   300  0020                     printf@flag:	
   301                           
   302                           ; 1 bytes @ 0x0
   303  0020                     	ds	1
   304  0021                     printf@ap:	
   305                           
   306                           ; 1 bytes @ 0x1
   307  0021                     	ds	1
   308  0022                     printf@c:	
   309                           
   310                           ; 1 bytes @ 0x2
   311  0022                     	ds	1
   312  0023                     printf@f:	
   313                           
   314                           ; 1 bytes @ 0x3
   315  0023                     	ds	1
   316  0024                     printf@cp:	
   317                           
   318                           ; 2 bytes @ 0x4
   319  0024                     	ds	2
   320  0026                     main@r_dos:	
   321                           
   322                           ; 15 bytes @ 0x6
   323  0026                     	ds	15
   324  0035                     main@r_uno:	
   325                           
   326                           ; 14 bytes @ 0x15
   327  0035                     	ds	14
   328  0043                     main@n:	
   329                           
   330                           ; 2 bytes @ 0x23
   331  0043                     	ds	2
   332                           
   333                           	psect	maintext
   334  0728                     __pmaintext:	
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 15 in file "display1.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  r_dos          15    6[BANK0 ] unsigned char [15]
   345 ;;  r_uno          14   21[BANK0 ] unsigned char [14]
   346 ;;  n               2   35[BANK0 ] int 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  2   20[None  ] int 
   349 ;; Registers used:
   350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         0      31       0       0       0
   358 ;;      Temps:          4       0       0       0       0
   359 ;;      Totals:         4      31       0       0       0
   360 ;;Total ram usage:       35 bytes
   361 ;; Hardware stack levels required when called:    2
   362 ;; This function calls:
   363 ;;		_comando
   364 ;;		_confBusLCD
   365 ;;		_printf
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _main
   373  0728                     _main:	
   374                           
   375                           ;display1.c: 16: char r_uno[] = "  IPN - ESCOM";
   376                           
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   379  0728  3035               	movlw	main@r_uno& (0+255)
   380  0729  0084               	movwf	4
   381  072A  3054               	movlw	low main@F1713
   382  072B  00F9               	movwf	??_main
   383  072C  0804               	movf	4,w
   384  072D  00FA               	movwf	??_main+1
   385  072E  300E               	movlw	14
   386  072F  00FB               	movwf	??_main+2
   387  0730                     u250:	
   388  0730  0879               	movf	??_main,w
   389  0731  0084               	movwf	4
   390  0732  1383               	bcf	3,7	;select IRP bank0
   391  0733  0800               	movf	0,w
   392  0734  00FC               	movwf	??_main+3
   393  0735  0AF9               	incf	??_main,f
   394  0736  087A               	movf	??_main+1,w
   395  0737  0084               	movwf	4
   396  0738  087C               	movf	??_main+3,w
   397  0739  0080               	movwf	0
   398  073A  0AFA               	incf	??_main+1,f
   399  073B  0BFB               	decfsz	??_main+2,f
   400  073C  2F30               	goto	u250
   401                           
   402                           ;display1.c: 17: char r_dos[] = " Micros - VEMM";
   403  073D  3026               	movlw	main@r_dos& (0+255)
   404  073E  0084               	movwf	4
   405  073F  3045               	movlw	low main@F1715
   406  0740  00F9               	movwf	??_main
   407  0741  0804               	movf	4,w
   408  0742  00FA               	movwf	??_main+1
   409  0743  300F               	movlw	15
   410  0744  00FB               	movwf	??_main+2
   411  0745                     u260:	
   412  0745  0879               	movf	??_main,w
   413  0746  0084               	movwf	4
   414  0747  1383               	bcf	3,7	;select IRP bank0
   415  0748  0800               	movf	0,w
   416  0749  00FC               	movwf	??_main+3
   417  074A  0AF9               	incf	??_main,f
   418  074B  087A               	movf	??_main+1,w
   419  074C  0084               	movwf	4
   420  074D  087C               	movf	??_main+3,w
   421  074E  0080               	movwf	0
   422  074F  0AFA               	incf	??_main+1,f
   423  0750  0BFB               	decfsz	??_main+2,f
   424  0751  2F45               	goto	u260
   425                           
   426                           ;display1.c: 18: int n;
   427                           ;display1.c: 20: TRISE = 0xF8;
   428  0752  30F8               	movlw	248
   429  0753  1683               	bsf	3,5	;RP0=1, select bank1
   430  0754  1303               	bcf	3,6	;RP1=0, select bank1
   431  0755  0089               	movwf	9	;volatile
   432                           
   433                           ;display1.c: 21: ANSEL = 0;
   434  0756  1683               	bsf	3,5	;RP0=1, select bank3
   435  0757  1703               	bsf	3,6	;RP1=1, select bank3
   436  0758  0188               	clrf	8	;volatile
   437                           
   438                           ;display1.c: 22: confBusLCD();
   439  0759  120A  118A  25FC  120A  118A  	fcall	_confBusLCD
   440                           
   441                           ;display1.c: 23: comando(0x0C);
   442  075E  300C               	movlw	12
   443  075F  120A  118A  262A  120A  118A  	fcall	_comando
   444                           
   445                           ;display1.c: 24: comando(0x28);
   446  0764  3028               	movlw	40
   447  0765  120A  118A  262A  120A  118A  	fcall	_comando
   448                           
   449                           ;display1.c: 25: comando(0x01);
   450  076A  3001               	movlw	1
   451  076B  120A  118A  262A  120A  118A  	fcall	_comando
   452                           
   453                           ;display1.c: 26: comando(0x80);
   454  0770  3080               	movlw	128
   455  0771  120A  118A  262A  120A  118A  	fcall	_comando
   456                           
   457                           ;display1.c: 27: printf("%s", r_uno);
   458  0776  3035               	movlw	(low (main@r_uno| 0))& (0+255)
   459  0777  00F9               	movwf	??_main
   460  0778  0879               	movf	??_main,w
   461  0779  00F7               	movwf	?_printf
   462  077A  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   463  077B  120A  118A  26B9  120A  118A  	fcall	_printf
   464                           
   465                           ;display1.c: 28: comando(0xC0);
   466  0780  30C0               	movlw	192
   467  0781  120A  118A  262A  120A  118A  	fcall	_comando
   468                           
   469                           ;display1.c: 29: printf("%s", r_dos);
   470  0786  3026               	movlw	(low (main@r_dos| 0))& (0+255)
   471  0787  00F9               	movwf	??_main
   472  0788  0879               	movf	??_main,w
   473  0789  00F7               	movwf	?_printf
   474  078A  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   475  078B  120A  118A  26B9  120A  118A  	fcall	_printf
   476  0790                     l898:	
   477                           ;display1.c: 30: while (1) {
   478                           
   479                           
   480                           ;display1.c: 31: for (n = 0; n < 11; n++) {
   481  0790  1283               	bcf	3,5	;RP0=0, select bank0
   482  0791  1303               	bcf	3,6	;RP1=0, select bank0
   483  0792  01C3               	clrf	main@n
   484  0793  01C4               	clrf	main@n+1
   485  0794  0844               	movf	main@n+1,w
   486  0795  3A80               	xorlw	128
   487  0796  00FF               	movwf	127
   488  0797  3080               	movlw	128
   489  0798  027F               	subwf	127,w
   490  0799  1D03               	skipz
   491  079A  2F9D               	goto	u275
   492  079B  300B               	movlw	11
   493  079C  0243               	subwf	main@n,w
   494  079D                     u275:	
   495  079D  1803               	btfsc	3,0
   496  079E  2FC5               	goto	l912
   497  079F                     l904:	
   498                           
   499                           ;display1.c: 32: _delay((unsigned long)((1000)*(4000000/4000.0)));
   500  079F  3006               	movlw	6
   501  07A0  00FB               	movwf	??_main+2
   502  07A1  3013               	movlw	19
   503  07A2  00FA               	movwf	??_main+1
   504  07A3  30B1               	movlw	177
   505  07A4  00F9               	movwf	??_main
   506  07A5                     u317:	
   507  07A5  0BF9               	decfsz	??_main,f
   508  07A6  2FA5               	goto	u317
   509  07A7  0BFA               	decfsz	??_main+1,f
   510  07A8  2FA5               	goto	u317
   511  07A9  0BFB               	decfsz	??_main+2,f
   512  07AA  2FA5               	goto	u317
   513  07AB  2FAC               	nop2
   514                           
   515                           ;display1.c: 33: comando(0x18);
   516  07AC  3018               	movlw	24
   517  07AD  120A  118A  262A  120A  118A  	fcall	_comando
   518  07B2  3001               	movlw	1
   519  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   520  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   521  07B5  07C3               	addwf	main@n,f
   522  07B6  1803               	skipnc
   523  07B7  0AC4               	incf	main@n+1,f
   524  07B8  3000               	movlw	0
   525  07B9  07C4               	addwf	main@n+1,f
   526  07BA  0844               	movf	main@n+1,w
   527  07BB  3A80               	xorlw	128
   528  07BC  00FF               	movwf	127
   529  07BD  3080               	movlw	128
   530  07BE  027F               	subwf	127,w
   531  07BF  1D03               	skipz
   532  07C0  2FC3               	goto	u285
   533  07C1  300B               	movlw	11
   534  07C2  0243               	subwf	main@n,w
   535  07C3                     u285:	
   536  07C3  1C03               	skipc
   537  07C4  2F9F               	goto	l904
   538  07C5                     l912:	
   539                           
   540                           ;display1.c: 34: }
   541                           ;display1.c: 35: for (n = 0; n < 11; n++) {
   542  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   543  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   544  07C7  01C3               	clrf	main@n
   545  07C8  01C4               	clrf	main@n+1
   546  07C9                     L1:	
   547  07C9  0844               	movf	main@n+1,w
   548  07CA  3A80               	xorlw	128
   549  07CB  00FF               	movwf	127
   550  07CC  3080               	movlw	128
   551  07CD  027F               	subwf	127,w
   552  07CE  1D03               	skipz
   553  07CF  2FD2               	goto	u295
   554  07D0  300B               	movlw	11
   555  07D1  0243               	subwf	main@n,w
   556  07D2                     u295:	
   557  07D2  1803               	btfsc	3,0
   558  07D3  2F90               	goto	l898
   559                           
   560                           ;display1.c: 36: _delay((unsigned long)((1000)*(4000000/4000.0)));
   561  07D4  3006               	movlw	6
   562  07D5  00FB               	movwf	??_main+2
   563  07D6  3013               	movlw	19
   564  07D7  00FA               	movwf	??_main+1
   565  07D8  30B1               	movlw	177
   566  07D9  00F9               	movwf	??_main
   567  07DA                     u327:	
   568  07DA  0BF9               	decfsz	??_main,f
   569  07DB  2FDA               	goto	u327
   570  07DC  0BFA               	decfsz	??_main+1,f
   571  07DD  2FDA               	goto	u327
   572  07DE  0BFB               	decfsz	??_main+2,f
   573  07DF  2FDA               	goto	u327
   574  07E0  2FE1               	nop2
   575                           
   576                           ;display1.c: 37: comando(0x1C);
   577  07E1  301C               	movlw	28
   578  07E2  120A  118A  262A  120A  118A  	fcall	_comando
   579  07E7  3001               	movlw	1
   580  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   581  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   582  07EA  07C3               	addwf	main@n,f
   583  07EB  1803               	skipnc
   584  07EC  0AC4               	incf	main@n+1,f
   585  07ED  3000               	movlw	0
   586  07EE  07C4               	addwf	main@n+1,f
   587  07EF  2FC9               	goto	L1
   588  07F0                     __end_of_main:	
   589                           
   590                           	psect	text1
   591  06B9                     __ptext1:	
   592 ;; *************** function _printf *****************
   593 ;; Defined at:
   594 ;;		line 464 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  f               1    wreg     PTR const unsigned char 
   597 ;;		 -> STR_2(3), STR_1(3), 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  f               1    3[BANK0 ] PTR const unsigned char 
   600 ;;		 -> STR_2(3), STR_1(3), 
   601 ;;  tmpval          4    0        struct .
   602 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
   603 ;;		 -> STR_3(7), main@r_dos(15), main@r_uno(14), 
   604 ;;  len             2    0        unsigned int 
   605 ;;  val             2    0        unsigned int 
   606 ;;  c               1    2[BANK0 ] char 
   607 ;;  ap              1    1[BANK0 ] PTR void [1]
   608 ;;		 -> ?_printf(2), 
   609 ;;  flag            1    0[BANK0 ] unsigned char 
   610 ;;  prec            1    0        char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  2    7[COMMON] int 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         1       0       0       0       0
   621 ;;      Locals:         0       6       0       0       0
   622 ;;      Temps:          1       0       0       0       0
   623 ;;      Totals:         2       6       0       0       0
   624 ;;Total ram usage:        8 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    1
   627 ;; This function calls:
   628 ;;		_putch
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _printf
   636  06B9                     _printf:	
   637                           
   638                           ;incstack = 0
   639                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   640                           ;printf@f stored from wreg
   641  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   642  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   643  06BB  00A3               	movwf	printf@f
   644                           
   645                           ;doprnt.c: 466: va_list ap;
   646                           ;doprnt.c: 499: signed char c;
   647                           ;doprnt.c: 506: signed char prec;
   648                           ;doprnt.c: 508: unsigned char flag;
   649                           ;doprnt.c: 523: union {
   650                           ;doprnt.c: 524: unsigned long vd;
   651                           ;doprnt.c: 525: double integ;
   652                           ;doprnt.c: 526: } tmpval;
   653                           ;doprnt.c: 528: unsigned int val;
   654                           ;doprnt.c: 529: unsigned len;
   655                           ;doprnt.c: 530: const char * cp;
   656                           ;doprnt.c: 533: *ap = __va_start();
   657  06BC  3077               	movlw	(low (?_printf| 0))& (0+255)
   658  06BD  00F8               	movwf	??_printf
   659  06BE  0878               	movf	??_printf,w
   660  06BF  00A1               	movwf	printf@ap
   661  06C0                     l874:	
   662                           ;doprnt.c: 1422: {
   663                           
   664                           ;doprnt.c: 536: while(c = *f++) {
   665                           
   666  06C0  3001               	movlw	1
   667  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   668  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   669  06C3  07A3               	addwf	printf@f,f
   670  06C4  30FF               	movlw	-1
   671  06C5  0723               	addwf	printf@f,w
   672  06C6  0084               	movwf	4
   673  06C7  120A  118A  200D  120A  118A  	fcall	stringdir
   674  06CC  00F8               	movwf	??_printf
   675  06CD  0878               	movf	??_printf,w
   676  06CE  00A2               	movwf	printf@c
   677  06CF  0822               	movf	printf@c,w
   678  06D0  1903               	btfsc	3,2
   679  06D1  0008               	return
   680                           
   681                           ;doprnt.c: 538: if(c != '%')
   682  06D2  3025               	movlw	37
   683  06D3  0622               	xorwf	printf@c,w
   684  06D4  1903               	btfsc	3,2
   685  06D5  2EDD               	goto	l854
   686                           
   687                           ;doprnt.c: 540: {
   688                           ;doprnt.c: 541: (putch(c) );
   689  06D6  0822               	movf	printf@c,w
   690  06D7  120A  118A  2670  120A  118A  	fcall	_putch
   691                           
   692                           ;doprnt.c: 542: continue;
   693  06DC  2EC0               	goto	l874
   694  06DD                     l854:	
   695                           
   696                           ;doprnt.c: 543: }
   697                           ;doprnt.c: 548: flag = 0;
   698  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   699  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   700  06DF  01A0               	clrf	printf@flag
   701                           
   702                           ;doprnt.c: 635: switch(c = *f++) {
   703  06E0  2F14               	goto	l872
   704  06E1                     l856:	
   705                           ;doprnt.c: 728: case 's':
   706                           
   707                           ;doprnt.c: 638: goto alldone;
   708                           
   709                           ;doprnt.c: 637: case 0:
   710                           
   711                           
   712                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
   713  06E1  0821               	movf	printf@ap,w
   714  06E2  0084               	movwf	4
   715  06E3  0800               	movf	0,w
   716  06E4  00A4               	movwf	printf@cp
   717  06E5  3000               	movlw	0
   718  06E6  00A5               	movwf	printf@cp+1
   719  06E7  3001               	movlw	1
   720  06E8  00F8               	movwf	??_printf
   721  06E9  0878               	movf	??_printf,w
   722  06EA  07A1               	addwf	printf@ap,f
   723                           
   724                           ;doprnt.c: 740: if(!cp)
   725  06EB  0824               	movf	printf@cp,w
   726  06EC  0425               	iorwf	printf@cp+1,w
   727  06ED  1D03               	btfss	3,2
   728  06EE  2EF3               	goto	l868
   729                           
   730                           ;doprnt.c: 741: cp = "(null)";
   731  06EF  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   732  06F0  00A4               	movwf	printf@cp
   733  06F1  3080               	movlw	128
   734  06F2  00A5               	movwf	printf@cp+1
   735  06F3                     l868:	
   736                           ;doprnt.c: 777: while(*cp)
   737                           
   738  06F3  0825               	movf	printf@cp+1,w
   739  06F4  00FF               	movwf	127
   740  06F5  0824               	movf	printf@cp,w
   741  06F6  0084               	movwf	4
   742  06F7  120A  118A  2003  120A  118A  	fcall	stringtab
   743  06FC  3A00               	xorlw	0
   744  06FD  1903               	btfsc	3,2
   745  06FE  2EC0               	goto	l874
   746                           
   747                           ;doprnt.c: 778: (putch(*cp++) );
   748  06FF  0825               	movf	printf@cp+1,w
   749  0700  00FF               	movwf	127
   750  0701  0824               	movf	printf@cp,w
   751  0702  0084               	movwf	4
   752  0703  120A  118A  2003  120A  118A  	fcall	stringtab
   753  0708  120A  118A  2670  120A  118A  	fcall	_putch
   754  070D  3001               	movlw	1
   755  070E  1283               	bcf	3,5	;RP0=0, select bank0
   756  070F  1303               	bcf	3,6	;RP1=0, select bank0
   757  0710  07A4               	addwf	printf@cp,f
   758  0711  1803               	skipnc
   759  0712  0AA5               	incf	printf@cp+1,f
   760  0713  2EF3               	goto	l868
   761  0714                     l872:	
   762                           ;doprnt.c: 822: }
   763                           
   764                           ;doprnt.c: 813: continue;
   765                           
   766                           ;doprnt.c: 802: default:
   767                           
   768                           ;doprnt.c: 779: continue;
   769                           
   770  0714  3001               	movlw	1
   771  0715  07A3               	addwf	printf@f,f
   772  0716  30FF               	movlw	-1
   773  0717  0723               	addwf	printf@f,w
   774  0718  0084               	movwf	4
   775  0719  120A  118A  200D  120A  118A  	fcall	stringdir
   776  071E  00A2               	movwf	printf@c
   777                           
   778                           ; Switch size 1, requested type "space"
   779                           ; Number of cases is 2, Range of values is 0 to 115
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte            7     4 (average)
   783                           ; jumptable            260     6 (fixed)
   784                           ;	Chosen strategy is simple_byte
   785  071F  3A00               	xorlw	0	; case 0
   786  0720  1903               	skipnz
   787  0721  2F27               	goto	l70
   788  0722  3A73               	xorlw	115	; case 115
   789  0723  1903               	skipnz
   790  0724  2EE1               	goto	l856
   791  0725  2EC0               	goto	l874
   792  0726  2EC0               	goto	l874
   793  0727                     l70:	
   794                           ;doprnt.c: 1540: return 0;
   795                           ;	Return value of _printf is never used
   796                           
   797                           ;doprnt.c: 1469: }
   798                           ;doprnt.c: 1533: }
   799                           ;doprnt.c: 1535: alldone:
   800                           
   801  0727  0008               	return
   802  0728                     __end_of_printf:	
   803                           
   804                           	psect	text2
   805  0670                     __ptext2:	
   806 ;; *************** function _putch *****************
   807 ;; Defined at:
   808 ;;		line 102 in file "display1.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  dat             1    wreg     unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  dat             1    4[COMMON] unsigned char 
   813 ;;  t               2    5[COMMON] int 
   814 ;;  estado          2    2[COMMON] int 
   815 ;; Return value:  Size  Location     Type
   816 ;;		None               void
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         5       0       0       0       0
   826 ;;      Temps:          2       0       0       0       0
   827 ;;      Totals:         7       0       0       0       0
   828 ;;Total ram usage:        7 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_printf
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _putch
   839  0670                     _putch:	
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _putch: [wreg+status,2+status,0]
   843                           ;putch@dat stored from wreg
   844  0670  00F4               	movwf	putch@dat
   845                           
   846                           ;display1.c: 103: int t, estado;
   847                           ;display1.c: 106: PORTEbits.RE0 = 0;
   848  0671  1283               	bcf	3,5	;RP0=0, select bank0
   849  0672  1303               	bcf	3,6	;RP1=0, select bank0
   850  0673  1009               	bcf	9,0	;volatile
   851                           
   852                           ;display1.c: 107: t = 0;
   853  0674  01F5               	clrf	putch@t
   854  0675  01F6               	clrf	putch@t+1
   855                           
   856                           ;display1.c: 108: PORTEbits.RE1 = 1;
   857  0676  1489               	bsf	9,1	;volatile
   858                           
   859                           ;display1.c: 109: t = 0;
   860  0677  01F5               	clrf	putch@t
   861  0678  01F6               	clrf	putch@t+1
   862  0679                     l734:	
   863                           ;display1.c: 110: do {
   864                           
   865                           
   866                           ;display1.c: 111: PORTEbits.RE2 = 1;
   867  0679  1509               	bsf	9,2	;volatile
   868                           
   869                           ;display1.c: 112: t = 0;
   870  067A  01F5               	clrf	putch@t
   871  067B  01F6               	clrf	putch@t+1
   872                           
   873                           ;display1.c: 113: estado = (PORTD & 0x80);
   874  067C  0808               	movf	8,w	;volatile
   875  067D  3980               	andlw	128
   876  067E  00F0               	movwf	??_putch
   877  067F  01F1               	clrf	??_putch+1
   878  0680  0870               	movf	??_putch,w
   879  0681  00F2               	movwf	putch@estado
   880  0682  0871               	movf	??_putch+1,w
   881  0683  00F3               	movwf	putch@estado+1
   882                           
   883                           ;display1.c: 114: PORTEbits.RE2 = 0;
   884  0684  1109               	bcf	9,2	;volatile
   885                           
   886                           ;display1.c: 115: t = 0;
   887  0685  01F5               	clrf	putch@t
   888  0686  01F6               	clrf	putch@t+1
   889                           
   890                           ;display1.c: 116: PORTEbits.RE2 = 1;
   891  0687  1509               	bsf	9,2	;volatile
   892                           
   893                           ;display1.c: 117: t = 0;
   894  0688  01F5               	clrf	putch@t
   895  0689  01F6               	clrf	putch@t+1
   896                           
   897                           ;display1.c: 118: PORTEbits.RE2 = 0;
   898  068A  1109               	bcf	9,2	;volatile
   899                           
   900                           ;display1.c: 119: t = 0;
   901  068B  01F5               	clrf	putch@t
   902  068C  01F6               	clrf	putch@t+1
   903                           
   904                           ;display1.c: 120: } while (estado != 0);
   905  068D  0872               	movf	putch@estado,w
   906  068E  0473               	iorwf	putch@estado+1,w
   907  068F  1D03               	btfss	3,2
   908  0690  2E79               	goto	l734
   909                           
   910                           ;display1.c: 121: PORTEbits.RE0 = 1;
   911  0691  1409               	bsf	9,0	;volatile
   912                           
   913                           ;display1.c: 122: t = 0;
   914  0692  01F5               	clrf	putch@t
   915  0693  01F6               	clrf	putch@t+1
   916                           
   917                           ;display1.c: 123: PORTEbits.RE1 = 0;
   918  0694  1089               	bcf	9,1	;volatile
   919                           
   920                           ;display1.c: 124: TRISD = 0x0F;
   921  0695  300F               	movlw	15
   922  0696  1683               	bsf	3,5	;RP0=1, select bank1
   923  0697  1303               	bcf	3,6	;RP1=0, select bank1
   924  0698  0088               	movwf	8	;volatile
   925                           
   926                           ;display1.c: 125: PORTD = dat;
   927  0699  0874               	movf	putch@dat,w
   928  069A  1283               	bcf	3,5	;RP0=0, select bank0
   929  069B  1303               	bcf	3,6	;RP1=0, select bank0
   930  069C  0088               	movwf	8	;volatile
   931                           
   932                           ;display1.c: 126: PORTEbits.RE2 = 1;
   933  069D  1509               	bsf	9,2	;volatile
   934                           
   935                           ;display1.c: 127: t = 0;
   936  069E  01F5               	clrf	putch@t
   937  069F  01F6               	clrf	putch@t+1
   938                           
   939                           ;display1.c: 128: PORTEbits.RE2 = 0;
   940  06A0  1109               	bcf	9,2	;volatile
   941                           
   942                           ;display1.c: 129: t = 0;
   943  06A1  01F5               	clrf	putch@t
   944  06A2  01F6               	clrf	putch@t+1
   945                           
   946                           ;display1.c: 130: PORTD = (dat << 4);
   947  06A3  0874               	movf	putch@dat,w
   948  06A4  00F0               	movwf	??_putch
   949  06A5  3003               	movlw	3
   950  06A6                     u175:	
   951  06A6  1003               	clrc
   952  06A7  0DF0               	rlf	??_putch,f
   953  06A8  3EFF               	addlw	-1
   954  06A9  1D03               	skipz
   955  06AA  2EA6               	goto	u175
   956  06AB  1003               	clrc
   957  06AC  0D70               	rlf	??_putch,w
   958  06AD  0088               	movwf	8	;volatile
   959                           
   960                           ;display1.c: 131: PORTEbits.RE2 = 1;
   961  06AE  1509               	bsf	9,2	;volatile
   962                           
   963                           ;display1.c: 132: t = 0;
   964  06AF  01F5               	clrf	putch@t
   965  06B0  01F6               	clrf	putch@t+1
   966                           
   967                           ;display1.c: 133: PORTEbits.RE2 = 0;
   968  06B1  1109               	bcf	9,2	;volatile
   969                           
   970                           ;display1.c: 134: t = 0;
   971  06B2  01F5               	clrf	putch@t
   972  06B3  01F6               	clrf	putch@t+1
   973                           
   974                           ;display1.c: 135: TRISD = 0xFF;
   975  06B4  30FF               	movlw	255
   976  06B5  1683               	bsf	3,5	;RP0=1, select bank1
   977  06B6  1303               	bcf	3,6	;RP1=0, select bank1
   978  06B7  0088               	movwf	8	;volatile
   979  06B8  0008               	return
   980  06B9                     __end_of_putch:	
   981                           
   982                           	psect	text3
   983  05FC                     __ptext3:	
   984 ;; *************** function _confBusLCD *****************
   985 ;; Defined at:
   986 ;;		line 42 in file "display1.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  t               2    4[COMMON] int 
   991 ;;  estado          2    2[COMMON] int 
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         4       0       0       0       0
  1003 ;;      Temps:          2       0       0       0       0
  1004 ;;      Totals:         6       0       0       0       0
  1005 ;;Total ram usage:        6 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _confBusLCD
  1016  05FC                     _confBusLCD:	
  1017                           
  1018                           ;display1.c: 43: int t, estado;
  1019                           ;display1.c: 46: PORTEbits.RE0 = 0;
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _confBusLCD: [wreg+status,2+status,0]
  1023  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1024  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1025  05FE  1009               	bcf	9,0	;volatile
  1026                           
  1027                           ;display1.c: 47: t = 0;
  1028  05FF  01F4               	clrf	confBusLCD@t
  1029  0600  01F5               	clrf	confBusLCD@t+1
  1030                           
  1031                           ;display1.c: 48: PORTEbits.RE1 = 1;
  1032  0601  1489               	bsf	9,1	;volatile
  1033                           
  1034                           ;display1.c: 49: t = 0;
  1035  0602  01F4               	clrf	confBusLCD@t
  1036  0603  01F5               	clrf	confBusLCD@t+1
  1037  0604                     l782:	
  1038                           ;display1.c: 50: do {
  1039                           
  1040                           
  1041                           ;display1.c: 51: PORTEbits.RE2 = 1;
  1042  0604  1509               	bsf	9,2	;volatile
  1043                           
  1044                           ;display1.c: 52: t = 0;
  1045  0605  01F4               	clrf	confBusLCD@t
  1046  0606  01F5               	clrf	confBusLCD@t+1
  1047                           
  1048                           ;display1.c: 53: estado = (PORTD & 0x80);
  1049  0607  0808               	movf	8,w	;volatile
  1050  0608  3980               	andlw	128
  1051  0609  00F0               	movwf	??_confBusLCD
  1052  060A  01F1               	clrf	??_confBusLCD+1
  1053  060B  0870               	movf	??_confBusLCD,w
  1054  060C  00F2               	movwf	confBusLCD@estado
  1055  060D  0871               	movf	??_confBusLCD+1,w
  1056  060E  00F3               	movwf	confBusLCD@estado+1
  1057                           
  1058                           ;display1.c: 54: PORTEbits.RE2 = 0;
  1059  060F  1109               	bcf	9,2	;volatile
  1060                           
  1061                           ;display1.c: 55: t = 0;
  1062  0610  01F4               	clrf	confBusLCD@t
  1063  0611  01F5               	clrf	confBusLCD@t+1
  1064                           
  1065                           ;display1.c: 56: } while (estado != 0);
  1066  0612  0872               	movf	confBusLCD@estado,w
  1067  0613  0473               	iorwf	confBusLCD@estado+1,w
  1068  0614  1D03               	btfss	3,2
  1069  0615  2E04               	goto	l782
  1070                           
  1071                           ;display1.c: 57: PORTEbits.RE1 = 0;
  1072  0616  1089               	bcf	9,1	;volatile
  1073                           
  1074                           ;display1.c: 59: TRISD = 0x0F;
  1075  0617  300F               	movlw	15
  1076  0618  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0619  1303               	bcf	3,6	;RP1=0, select bank1
  1078  061A  0088               	movwf	8	;volatile
  1079                           
  1080                           ;display1.c: 60: PORTD = 0x20;
  1081  061B  3020               	movlw	32
  1082  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1083  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1084  061E  0088               	movwf	8	;volatile
  1085                           
  1086                           ;display1.c: 61: PORTEbits.RE2 = 1;
  1087  061F  1509               	bsf	9,2	;volatile
  1088                           
  1089                           ;display1.c: 62: t = 0;
  1090  0620  01F4               	clrf	confBusLCD@t
  1091  0621  01F5               	clrf	confBusLCD@t+1
  1092                           
  1093                           ;display1.c: 63: PORTEbits.RE2 = 0;
  1094  0622  1109               	bcf	9,2	;volatile
  1095                           
  1096                           ;display1.c: 64: t = 0;
  1097  0623  01F4               	clrf	confBusLCD@t
  1098  0624  01F5               	clrf	confBusLCD@t+1
  1099                           
  1100                           ;display1.c: 65: TRISD = 0xFF;
  1101  0625  30FF               	movlw	255
  1102  0626  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0627  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0628  0088               	movwf	8	;volatile
  1105  0629  0008               	return
  1106  062A                     __end_of_confBusLCD:	
  1107                           
  1108                           	psect	text4
  1109  062A                     __ptext4:	
  1110 ;; *************** function _comando *****************
  1111 ;; Defined at:
  1112 ;;		line 68 in file "display1.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  com             1    wreg     unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  com             1    4[COMMON] unsigned char 
  1117 ;;  t               2    5[COMMON] int 
  1118 ;;  estado          2    2[COMMON] int 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;		None               void
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         5       0       0       0       0
  1130 ;;      Temps:          2       0       0       0       0
  1131 ;;      Totals:         7       0       0       0       0
  1132 ;;Total ram usage:        7 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _comando
  1143  062A                     _comando:	
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _comando: [wreg+status,2+status,0]
  1147                           ;comando@com stored from wreg
  1148  062A  00F4               	movwf	comando@com
  1149                           
  1150                           ;display1.c: 69: int t, estado;
  1151                           ;display1.c: 72: PORTEbits.RE0 = 0;
  1152  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1153  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1154  062D  1009               	bcf	9,0	;volatile
  1155                           
  1156                           ;display1.c: 73: t = 0;
  1157  062E  01F5               	clrf	comando@t
  1158  062F  01F6               	clrf	comando@t+1
  1159                           
  1160                           ;display1.c: 74: PORTEbits.RE1 = 1;
  1161  0630  1489               	bsf	9,1	;volatile
  1162                           
  1163                           ;display1.c: 75: t = 0;
  1164  0631  01F5               	clrf	comando@t
  1165  0632  01F6               	clrf	comando@t+1
  1166  0633                     l808:	
  1167                           ;display1.c: 76: do {
  1168                           
  1169                           
  1170                           ;display1.c: 77: PORTEbits.RE2 = 1;
  1171  0633  1509               	bsf	9,2	;volatile
  1172                           
  1173                           ;display1.c: 78: t = 0;
  1174  0634  01F5               	clrf	comando@t
  1175  0635  01F6               	clrf	comando@t+1
  1176                           
  1177                           ;display1.c: 79: estado = (PORTD & 0x80);
  1178  0636  0808               	movf	8,w	;volatile
  1179  0637  3980               	andlw	128
  1180  0638  00F0               	movwf	??_comando
  1181  0639  01F1               	clrf	??_comando+1
  1182  063A  0870               	movf	??_comando,w
  1183  063B  00F2               	movwf	comando@estado
  1184  063C  0871               	movf	??_comando+1,w
  1185  063D  00F3               	movwf	comando@estado+1
  1186                           
  1187                           ;display1.c: 80: PORTEbits.RE2 = 0;
  1188  063E  1109               	bcf	9,2	;volatile
  1189                           
  1190                           ;display1.c: 81: t = 0;
  1191  063F  01F5               	clrf	comando@t
  1192  0640  01F6               	clrf	comando@t+1
  1193                           
  1194                           ;display1.c: 82: PORTEbits.RE2 = 1;
  1195  0641  1509               	bsf	9,2	;volatile
  1196                           
  1197                           ;display1.c: 83: t = 0;
  1198  0642  01F5               	clrf	comando@t
  1199  0643  01F6               	clrf	comando@t+1
  1200                           
  1201                           ;display1.c: 84: PORTEbits.RE2 = 0;
  1202  0644  1109               	bcf	9,2	;volatile
  1203                           
  1204                           ;display1.c: 85: t = 0;
  1205  0645  01F5               	clrf	comando@t
  1206  0646  01F6               	clrf	comando@t+1
  1207                           
  1208                           ;display1.c: 86: } while (estado != 0);
  1209  0647  0872               	movf	comando@estado,w
  1210  0648  0473               	iorwf	comando@estado+1,w
  1211  0649  1D03               	btfss	3,2
  1212  064A  2E33               	goto	l808
  1213                           
  1214                           ;display1.c: 87: PORTEbits.RE1 = 0;
  1215  064B  1089               	bcf	9,1	;volatile
  1216                           
  1217                           ;display1.c: 88: TRISD = 0x0F;
  1218  064C  300F               	movlw	15
  1219  064D  1683               	bsf	3,5	;RP0=1, select bank1
  1220  064E  1303               	bcf	3,6	;RP1=0, select bank1
  1221  064F  0088               	movwf	8	;volatile
  1222                           
  1223                           ;display1.c: 89: PORTD = com;
  1224  0650  0874               	movf	comando@com,w
  1225  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0653  0088               	movwf	8	;volatile
  1228                           
  1229                           ;display1.c: 90: PORTEbits.RE2 = 1;
  1230  0654  1509               	bsf	9,2	;volatile
  1231                           
  1232                           ;display1.c: 91: t = 0;
  1233  0655  01F5               	clrf	comando@t
  1234  0656  01F6               	clrf	comando@t+1
  1235                           
  1236                           ;display1.c: 92: PORTEbits.RE2 = 0;
  1237  0657  1109               	bcf	9,2	;volatile
  1238                           
  1239                           ;display1.c: 93: t = 0;
  1240  0658  01F5               	clrf	comando@t
  1241  0659  01F6               	clrf	comando@t+1
  1242                           
  1243                           ;display1.c: 94: PORTD = (com << 4);
  1244  065A  0874               	movf	comando@com,w
  1245  065B  00F0               	movwf	??_comando
  1246  065C  3003               	movlw	3
  1247  065D                     u205:	
  1248  065D  1003               	clrc
  1249  065E  0DF0               	rlf	??_comando,f
  1250  065F  3EFF               	addlw	-1
  1251  0660  1D03               	skipz
  1252  0661  2E5D               	goto	u205
  1253  0662  1003               	clrc
  1254  0663  0D70               	rlf	??_comando,w
  1255  0664  0088               	movwf	8	;volatile
  1256                           
  1257                           ;display1.c: 95: PORTEbits.RE2 = 1;
  1258  0665  1509               	bsf	9,2	;volatile
  1259                           
  1260                           ;display1.c: 96: t = 0;
  1261  0666  01F5               	clrf	comando@t
  1262  0667  01F6               	clrf	comando@t+1
  1263                           
  1264                           ;display1.c: 97: PORTEbits.RE2 = 0;
  1265  0668  1109               	bcf	9,2	;volatile
  1266                           
  1267                           ;display1.c: 98: t = 0;
  1268  0669  01F5               	clrf	comando@t
  1269  066A  01F6               	clrf	comando@t+1
  1270                           
  1271                           ;display1.c: 99: TRISD = 0xFF;
  1272  066B  30FF               	movlw	255
  1273  066C  1683               	bsf	3,5	;RP0=1, select bank1
  1274  066D  1303               	bcf	3,6	;RP1=0, select bank1
  1275  066E  0088               	movwf	8	;volatile
  1276  066F  0008               	return
  1277  0670                     __end_of_comando:	
  1278  007E                     btemp	set	126	;btemp
  1279  007E                     wtemp	set	126
  1280  007E                     wtemp0	set	126
  1281  0080                     wtemp1	set	128
  1282  0082                     wtemp2	set	130
  1283  0084                     wtemp3	set	132
  1284  0086                     wtemp4	set	134
  1285  0088                     wtemp5	set	136
  1286  007F                     wtemp6	set	127
  1287  007E                     ttemp	set	126
  1288  007E                     ttemp0	set	126
  1289  0081                     ttemp1	set	129
  1290  0084                     ttemp2	set	132
  1291  0087                     ttemp3	set	135
  1292  007F                     ttemp4	set	127
  1293  007E                     ltemp	set	126
  1294  007E                     ltemp0	set	126
  1295  0082                     ltemp1	set	130
  1296  0086                     ltemp2	set	134
  1297  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    0
    Data        29
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[7]), main@r_dos(BANK0[15]), main@r_uno(BANK0[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0     564
                                              9 COMMON     4     4      0
                                              6 BANK0     31    31      0
                            _comando
                         _confBusLCD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              17    16      1     316
                                              7 COMMON     2     1      1
                                              0 BANK0      6     6      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                7     7      0      78
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _confBusLCD                                           6     6      0      29
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _comando                                              7     7      0      77
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando
   _confBusLCD
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4F      12        0.0%
ABS                  0      0      4F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov  8 23:14:31 2018

                      pc 0002                       l70 0727                       fsr 0004  
                    l734 0679                      l808 0633                      l912 07C5  
                    l904 079F                      l782 0604                      l854 06DD  
                    l856 06E1                      l872 0714                      l874 06C0  
                    l868 06F3                      l898 0790                      u205 065D  
                    u250 0730                      u260 0745                      u317 07A5  
                    u175 06A6                      u327 07DA                      u275 079D  
                    u285 07C3                      u295 07D2            comando@estado 0072  
                    fsr0 0004                      indf 0000                     STR_1 001A  
                   STR_2 001A                     STR_3 0013                     _main 0728  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  _PORTD 0008                    _TRISD 0088                    _TRISE 0089  
          __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000          __end_of_comando 0670  
                  _putch 0670                    main@n 0043                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07F0  
           __end_of_main 07F0                   ??_main 0079                   ?_putch 0070  
                 _printf 06B9                ??_comando 0070                   putch@t 0075  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 05DF  
          __end_of_putch 06B9                  ??_putch 0070               __pmaintext 0728  
             _confBusLCD 05FC                  ?_printf 0077               __stringtab 0003  
                __ptext1 06B9                  __ptext2 0670                  __ptext3 05FC  
                __ptext4 062A                  _comando 062A          __size_of_printf 006F  
   end_of_initialization 07FC                  printf@c 0022                  printf@f 0023  
            ?_confBusLCD 0070                _PORTEbits 0009               comando@com 0074  
         __end_of_printf 0728      start_initialization 07F0              putch@estado 0072  
    __size_of_confBusLCD 002E               init_fetch0 05CE              __pdataBANK0 0045  
       confBusLCD@estado 0072                 ??_printf 0078                ___latbits 0002  
          __pcstackBANK0 0020   __CFG_FOSC$INTRC_CLKOUT 0000                __pstrings 0003  
               ?_comando 0070           __size_of_putch 0049                main@F1713 0054  
              main@F1715 0045             ??_confBusLCD 0070              __stringbase 0012  
             printf@flag 0020                main@r_dos 0026                main@r_uno 0035  
     __end_of_confBusLCD 062A       __end_of__stringtab 0013         __size_of_comando 0046  
          __size_of_main 00C8                 comando@t 0075                 init_ram0 05D2  
              stringcode 000D                 printf@ap 0021                 printf@cp 0024  
               putch@dat 0074              confBusLCD@t 0074                 stringdir 000D  
               stringtab 0003  
