

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov  8 23:50:34 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  008F                     	;# 
    62  0090                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0093                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0095                     	;# 
    70  0096                     	;# 
    71  0097                     	;# 
    72  0098                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  0105                     	;# 
    81  0107                     	;# 
    82  0108                     	;# 
    83  0109                     	;# 
    84  010C                     	;# 
    85  010C                     	;# 
    86  010D                     	;# 
    87  010E                     	;# 
    88  010F                     	;# 
    89  0185                     	;# 
    90  0187                     	;# 
    91  0188                     	;# 
    92  0189                     	;# 
    93  018C                     	;# 
    94  018D                     	;# 
    95                           
    96                           	psect	idataBANK0
    97  0605                     __pidataBANK0:	
    98                           
    99                           ;initializer for main@F1713
   100  0605  345F               	retlw	95
   101  0606  343A               	retlw	58
   102  0607  343A               	retlw	58
   103  0608  3438               	retlw	56
   104  0609  3420               	retlw	32
   105  060A  3462               	retlw	98
   106  060B  3469               	retlw	105
   107  060C  3474               	retlw	116
   108  060D  3473               	retlw	115
   109  060E  343A               	retlw	58
   110  060F  343A               	retlw	58
   111  0610  345F               	retlw	95
   112  0611  345F               	retlw	95
   113  0612  3400               	retlw	0
   114                           
   115                           ;initializer for main@F1715
   116  0613  344D               	retlw	77
   117  0614  3469               	retlw	105
   118  0615  3463               	retlw	99
   119  0616  3472               	retlw	114
   120  0617  346F               	retlw	111
   121  0618  3473               	retlw	115
   122  0619  3420               	retlw	32
   123  061A  342D               	retlw	45
   124  061B  3420               	retlw	32
   125  061C  3456               	retlw	86
   126  061D  3445               	retlw	69
   127  061E  344D               	retlw	77
   128  061F  344D               	retlw	77
   129  0620  3400               	retlw	0
   130  0008                     _PORTD	set	8
   131  0009                     _PORTEbits	set	9
   132  0088                     _TRISD	set	136
   133  0089                     _TRISE	set	137
   134  0188                     _ANSEL	set	392
   135                           
   136                           	psect	strings
   137  0003                     __pstrings:	
   138  0003                     stringtab:	
   139  0003                     __stringtab:	
   140                           
   141                           ;	String table - string pointers are 1 byte each
   142  0003  1BFF               	btfsc	btemp+1,7
   143  0004  280D               	ljmp	stringcode
   144  0005  1383               	bcf	3,7
   145  0006  187F               	btfsc	btemp+1,0
   146  0007  1783               	bsf	3,7
   147  0008  0800               	movf	0,w
   148  0009  0A84               	incf	4,f
   149  000A  1903               	skipnz
   150  000B  0AFF               	incf	btemp+1,f
   151  000C  0008               	return
   152  000D                     stringcode:	
   153  000D                     stringdir:	
   154  000D  3000               	movlw	high stringdir
   155  000E  008A               	movwf	10
   156  000F  0804               	movf	4,w
   157  0010  0A84               	incf	4,f
   158  0011  0782               	addwf	2,f
   159  0012                     __stringbase:	
   160  0012  3400               	retlw	0
   161  0013                     __end_of__stringtab:	
   162  0013                     STR_3:	
   163  0013  3428               	retlw	40	;'('
   164  0014  346E               	retlw	110	;'n'
   165  0015  3475               	retlw	117	;'u'
   166  0016  346C               	retlw	108	;'l'
   167  0017  346C               	retlw	108	;'l'
   168  0018  3429               	retlw	41	;')'
   169  0019  3400               	retlw	0
   170  001A                     STR_1:	
   171  001A  3425               	retlw	37	;'%'
   172  001B  3473               	retlw	115	;'s'
   173  001C  3400               	retlw	0
   174  001A                     
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  07F0                     start_initialization:	
   179  07F0                     __initialization:	
   180                           
   181                           ; Initialize objects allocated to BANK0
   182  07F0  1383               	bcf	3,7	;select IRP bank0
   183  07F1  3060               	movlw	low (__pdataBANK0+28)
   184  07F2  00FD               	movwf	btemp+-1
   185  07F3  3006               	movlw	high __pidataBANK0
   186  07F4  00FE               	movwf	btemp
   187  07F5  3005               	movlw	low __pidataBANK0
   188  07F6  00FF               	movwf	btemp+1
   189  07F7  3044               	movlw	low __pdataBANK0
   190  07F8  0084               	movwf	4
   191  07F9  120A  118A  25F8   	fcall	init_ram0
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:	
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2F28   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	dataBANK0
   200  0044                     __pdataBANK0:	
   201  0044                     main@F1713:	
   202  0044                     	ds	14
   203  0052                     main@F1715:	
   204  0052                     	ds	14
   205                           
   206                           	psect	inittext
   207  05F4                     init_fetch0:	
   208                           ;	Called with low address in FSR and high address in W
   209                           
   210  05F4  087E               	movf	126,w
   211  05F5  008A               	movwf	10
   212  05F6  087F               	movf	127,w
   213  05F7  0082               	movwf	2
   214  05F8                     init_ram0:	
   215                           ;Called with:
   216                           ;	high address of idata address in btemp 
   217                           ;	low address of idata address in btemp+1 
   218                           ;	low address of data in FSR
   219                           ;	high address + 1 of data in btemp-1
   220                           
   221  05F8  25F4  120A  118A   	fcall	init_fetch0
   222  05FB  0080               	movwf	0
   223  05FC  0A84               	incf	4,f
   224  05FD  0804               	movf	4,w
   225  05FE  067D               	xorwf	125,w
   226  05FF  1903               	btfsc	3,2
   227  0600  3400               	retlw	0
   228  0601  0AFF               	incf	127,f
   229  0602  1903               	btfsc	3,2
   230  0603  0AFE               	incf	126,f
   231  0604  2DF8               	goto	init_ram0
   232                           
   233                           	psect	cstackCOMMON
   234  0070                     __pcstackCOMMON:	
   235  0070                     ?_confBusLCD:	
   236  0070                     ??_confBusLCD:	
   237                           ; 0 bytes @ 0x0
   238                           
   239  0070                     ?_comando:	
   240                           ; 0 bytes @ 0x0
   241                           
   242  0070                     ??_comando:	
   243                           ; 0 bytes @ 0x0
   244                           
   245  0070                     ?_putch:	
   246                           ; 0 bytes @ 0x0
   247                           
   248  0070                     ??_putch:	
   249                           ; 0 bytes @ 0x0
   250                           
   251  0070                     ?_main:	
   252                           ; 0 bytes @ 0x0
   253                           
   254                           
   255                           ; 2 bytes @ 0x0
   256  0070                     	ds	2
   257  0072                     confBusLCD@estado:	
   258  0072                     comando@estado:	
   259                           ; 2 bytes @ 0x2
   260                           
   261  0072                     putch@estado:	
   262                           ; 2 bytes @ 0x2
   263                           
   264                           
   265                           ; 2 bytes @ 0x2
   266  0072                     	ds	2
   267  0074                     comando@com:	
   268  0074                     putch@dat:	
   269                           ; 1 bytes @ 0x4
   270                           
   271  0074                     confBusLCD@t:	
   272                           ; 1 bytes @ 0x4
   273                           
   274                           
   275                           ; 2 bytes @ 0x4
   276  0074                     	ds	1
   277  0075                     comando@t:	
   278  0075                     putch@t:	
   279                           ; 2 bytes @ 0x5
   280                           
   281                           
   282                           ; 2 bytes @ 0x5
   283  0075                     	ds	2
   284  0077                     ?_printf:	
   285                           
   286                           ; 2 bytes @ 0x7
   287  0077                     	ds	1
   288  0078                     ??_printf:	
   289                           
   290                           ; 0 bytes @ 0x8
   291  0078                     	ds	1
   292  0079                     ??_main:	
   293                           
   294                           ; 0 bytes @ 0x9
   295  0079                     	ds	4
   296                           
   297                           	psect	cstackBANK0
   298  0020                     __pcstackBANK0:	
   299  0020                     printf@flag:	
   300                           
   301                           ; 1 bytes @ 0x0
   302  0020                     	ds	1
   303  0021                     printf@ap:	
   304                           
   305                           ; 1 bytes @ 0x1
   306  0021                     	ds	1
   307  0022                     printf@c:	
   308                           
   309                           ; 1 bytes @ 0x2
   310  0022                     	ds	1
   311  0023                     printf@f:	
   312                           
   313                           ; 1 bytes @ 0x3
   314  0023                     	ds	1
   315  0024                     printf@cp:	
   316                           
   317                           ; 2 bytes @ 0x4
   318  0024                     	ds	2
   319  0026                     main@r_uno:	
   320                           
   321                           ; 14 bytes @ 0x6
   322  0026                     	ds	14
   323  0034                     main@r_dos:	
   324                           
   325                           ; 14 bytes @ 0x14
   326  0034                     	ds	14
   327  0042                     main@n:	
   328                           
   329                           ; 2 bytes @ 0x22
   330  0042                     	ds	2
   331                           
   332                           	psect	maintext
   333  0728                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 14 in file "display81.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  r_dos          14   20[BANK0 ] unsigned char [14]
   344 ;;  r_uno          14    6[BANK0 ] unsigned char [14]
   345 ;;  n               2   34[BANK0 ] int 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  2   20[None  ] int 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0      30       0       0       0
   357 ;;      Temps:          4       0       0       0       0
   358 ;;      Totals:         4      30       0       0       0
   359 ;;Total ram usage:       34 bytes
   360 ;; Hardware stack levels required when called:    2
   361 ;; This function calls:
   362 ;;		_comando
   363 ;;		_confBusLCD
   364 ;;		_printf
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function _main
   372  0728                     _main:	
   373                           
   374                           ;display81.c: 15: char r_uno[] = "_::8 bits::__";
   375                           
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   378  0728  3026               	movlw	main@r_uno& (0+255)
   379  0729  0084               	movwf	4
   380  072A  3044               	movlw	low main@F1713
   381  072B  00F9               	movwf	??_main
   382  072C  0804               	movf	4,w
   383  072D  00FA               	movwf	??_main+1
   384  072E  300E               	movlw	14
   385  072F  00FB               	movwf	??_main+2
   386  0730                     u210:	
   387  0730  0879               	movf	??_main,w
   388  0731  0084               	movwf	4
   389  0732  1383               	bcf	3,7	;select IRP bank0
   390  0733  0800               	movf	0,w
   391  0734  00FC               	movwf	??_main+3
   392  0735  0AF9               	incf	??_main,f
   393  0736  087A               	movf	??_main+1,w
   394  0737  0084               	movwf	4
   395  0738  087C               	movf	??_main+3,w
   396  0739  0080               	movwf	0
   397  073A  0AFA               	incf	??_main+1,f
   398  073B  0BFB               	decfsz	??_main+2,f
   399  073C  2F30               	goto	u210
   400                           
   401                           ;display81.c: 16: char r_dos[] = "Micros - VEMM";
   402  073D  3034               	movlw	main@r_dos& (0+255)
   403  073E  0084               	movwf	4
   404  073F  3052               	movlw	low main@F1715
   405  0740  00F9               	movwf	??_main
   406  0741  0804               	movf	4,w
   407  0742  00FA               	movwf	??_main+1
   408  0743  300E               	movlw	14
   409  0744  00FB               	movwf	??_main+2
   410  0745                     u220:	
   411  0745  0879               	movf	??_main,w
   412  0746  0084               	movwf	4
   413  0747  1383               	bcf	3,7	;select IRP bank0
   414  0748  0800               	movf	0,w
   415  0749  00FC               	movwf	??_main+3
   416  074A  0AF9               	incf	??_main,f
   417  074B  087A               	movf	??_main+1,w
   418  074C  0084               	movwf	4
   419  074D  087C               	movf	??_main+3,w
   420  074E  0080               	movwf	0
   421  074F  0AFA               	incf	??_main+1,f
   422  0750  0BFB               	decfsz	??_main+2,f
   423  0751  2F45               	goto	u220
   424                           
   425                           ;display81.c: 17: int n;
   426                           ;display81.c: 19: TRISE = 0xF8;
   427  0752  30F8               	movlw	248
   428  0753  1683               	bsf	3,5	;RP0=1, select bank1
   429  0754  1303               	bcf	3,6	;RP1=0, select bank1
   430  0755  0089               	movwf	9	;volatile
   431                           
   432                           ;display81.c: 20: ANSEL = 0;
   433  0756  1683               	bsf	3,5	;RP0=1, select bank3
   434  0757  1703               	bsf	3,6	;RP1=1, select bank3
   435  0758  0188               	clrf	8	;volatile
   436                           
   437                           ;display81.c: 21: confBusLCD();
   438  0759  120A  118A  2621  120A  118A  	fcall	_confBusLCD
   439                           
   440                           ;display81.c: 22: comando(0x0C);
   441  075E  300C               	movlw	12
   442  075F  120A  118A  264E  120A  118A  	fcall	_comando
   443                           
   444                           ;display81.c: 23: comando(0x38);
   445  0764  3038               	movlw	56
   446  0765  120A  118A  264E  120A  118A  	fcall	_comando
   447                           
   448                           ;display81.c: 24: comando(0x01);
   449  076A  3001               	movlw	1
   450  076B  120A  118A  264E  120A  118A  	fcall	_comando
   451                           
   452                           ;display81.c: 25: comando(0x80);
   453  0770  3080               	movlw	128
   454  0771  120A  118A  264E  120A  118A  	fcall	_comando
   455                           
   456                           ;display81.c: 26: printf("%s", r_uno);
   457  0776  3026               	movlw	(low (main@r_uno| 0))& (0+255)
   458  0777  00F9               	movwf	??_main
   459  0778  0879               	movf	??_main,w
   460  0779  00F7               	movwf	?_printf
   461  077A  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   462  077B  120A  118A  26B9  120A  118A  	fcall	_printf
   463                           
   464                           ;display81.c: 27: comando(0xC0);
   465  0780  30C0               	movlw	192
   466  0781  120A  118A  264E  120A  118A  	fcall	_comando
   467                           
   468                           ;display81.c: 28: printf("%s", r_dos);
   469  0786  3034               	movlw	(low (main@r_dos| 0))& (0+255)
   470  0787  00F9               	movwf	??_main
   471  0788  0879               	movf	??_main,w
   472  0789  00F7               	movwf	?_printf
   473  078A  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   474  078B  120A  118A  26B9  120A  118A  	fcall	_printf
   475  0790                     l874:	
   476                           ;display81.c: 29: while (1) {
   477                           
   478                           
   479                           ;display81.c: 30: for (n = 0; n < 11; n++) {
   480  0790  1283               	bcf	3,5	;RP0=0, select bank0
   481  0791  1303               	bcf	3,6	;RP1=0, select bank0
   482  0792  01C2               	clrf	main@n
   483  0793  01C3               	clrf	main@n+1
   484  0794  0843               	movf	main@n+1,w
   485  0795  3A80               	xorlw	128
   486  0796  00FF               	movwf	127
   487  0797  3080               	movlw	128
   488  0798  027F               	subwf	127,w
   489  0799  1D03               	skipz
   490  079A  2F9D               	goto	u235
   491  079B  300B               	movlw	11
   492  079C  0242               	subwf	main@n,w
   493  079D                     u235:	
   494  079D  1803               	btfsc	3,0
   495  079E  2FC5               	goto	l888
   496  079F                     l880:	
   497                           
   498                           ;display81.c: 31: _delay((unsigned long)((1000)*(4000000/4000.0)));
   499  079F  3006               	movlw	6
   500  07A0  00FB               	movwf	??_main+2
   501  07A1  3013               	movlw	19
   502  07A2  00FA               	movwf	??_main+1
   503  07A3  30B1               	movlw	177
   504  07A4  00F9               	movwf	??_main
   505  07A5                     u277:	
   506  07A5  0BF9               	decfsz	??_main,f
   507  07A6  2FA5               	goto	u277
   508  07A7  0BFA               	decfsz	??_main+1,f
   509  07A8  2FA5               	goto	u277
   510  07A9  0BFB               	decfsz	??_main+2,f
   511  07AA  2FA5               	goto	u277
   512  07AB  2FAC               	nop2
   513                           
   514                           ;display81.c: 32: comando(0x18);
   515  07AC  3018               	movlw	24
   516  07AD  120A  118A  264E  120A  118A  	fcall	_comando
   517  07B2  3001               	movlw	1
   518  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   519  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   520  07B5  07C2               	addwf	main@n,f
   521  07B6  1803               	skipnc
   522  07B7  0AC3               	incf	main@n+1,f
   523  07B8  3000               	movlw	0
   524  07B9  07C3               	addwf	main@n+1,f
   525  07BA  0843               	movf	main@n+1,w
   526  07BB  3A80               	xorlw	128
   527  07BC  00FF               	movwf	127
   528  07BD  3080               	movlw	128
   529  07BE  027F               	subwf	127,w
   530  07BF  1D03               	skipz
   531  07C0  2FC3               	goto	u245
   532  07C1  300B               	movlw	11
   533  07C2  0242               	subwf	main@n,w
   534  07C3                     u245:	
   535  07C3  1C03               	skipc
   536  07C4  2F9F               	goto	l880
   537  07C5                     l888:	
   538                           
   539                           ;display81.c: 33: }
   540                           ;display81.c: 34: for (n = 0; n < 11; n++) {
   541  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   542  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   543  07C7  01C2               	clrf	main@n
   544  07C8  01C3               	clrf	main@n+1
   545  07C9                     L1:	
   546  07C9  0843               	movf	main@n+1,w
   547  07CA  3A80               	xorlw	128
   548  07CB  00FF               	movwf	127
   549  07CC  3080               	movlw	128
   550  07CD  027F               	subwf	127,w
   551  07CE  1D03               	skipz
   552  07CF  2FD2               	goto	u255
   553  07D0  300B               	movlw	11
   554  07D1  0242               	subwf	main@n,w
   555  07D2                     u255:	
   556  07D2  1803               	btfsc	3,0
   557  07D3  2F90               	goto	l874
   558                           
   559                           ;display81.c: 35: _delay((unsigned long)((1000)*(4000000/4000.0)));
   560  07D4  3006               	movlw	6
   561  07D5  00FB               	movwf	??_main+2
   562  07D6  3013               	movlw	19
   563  07D7  00FA               	movwf	??_main+1
   564  07D8  30B1               	movlw	177
   565  07D9  00F9               	movwf	??_main
   566  07DA                     u287:	
   567  07DA  0BF9               	decfsz	??_main,f
   568  07DB  2FDA               	goto	u287
   569  07DC  0BFA               	decfsz	??_main+1,f
   570  07DD  2FDA               	goto	u287
   571  07DE  0BFB               	decfsz	??_main+2,f
   572  07DF  2FDA               	goto	u287
   573  07E0  2FE1               	nop2
   574                           
   575                           ;display81.c: 36: comando(0x1C);
   576  07E1  301C               	movlw	28
   577  07E2  120A  118A  264E  120A  118A  	fcall	_comando
   578  07E7  3001               	movlw	1
   579  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   580  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   581  07EA  07C2               	addwf	main@n,f
   582  07EB  1803               	skipnc
   583  07EC  0AC3               	incf	main@n+1,f
   584  07ED  3000               	movlw	0
   585  07EE  07C3               	addwf	main@n+1,f
   586  07EF  2FC9               	goto	L1
   587  07F0                     __end_of_main:	
   588                           
   589                           	psect	text1
   590  06B9                     __ptext1:	
   591 ;; *************** function _printf *****************
   592 ;; Defined at:
   593 ;;		line 464 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  f               1    wreg     PTR const unsigned char 
   596 ;;		 -> STR_2(3), STR_1(3), 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  f               1    3[BANK0 ] PTR const unsigned char 
   599 ;;		 -> STR_2(3), STR_1(3), 
   600 ;;  tmpval          4    0        struct .
   601 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
   602 ;;		 -> STR_3(7), main@r_dos(14), main@r_uno(14), 
   603 ;;  len             2    0        unsigned int 
   604 ;;  val             2    0        unsigned int 
   605 ;;  c               1    2[BANK0 ] char 
   606 ;;  ap              1    1[BANK0 ] PTR void [1]
   607 ;;		 -> ?_printf(2), 
   608 ;;  flag            1    0[BANK0 ] unsigned char 
   609 ;;  prec            1    0        char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  2    7[COMMON] int 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         1       0       0       0       0
   620 ;;      Locals:         0       6       0       0       0
   621 ;;      Temps:          1       0       0       0       0
   622 ;;      Totals:         2       6       0       0       0
   623 ;;Total ram usage:        8 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    1
   626 ;; This function calls:
   627 ;;		_putch
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           
   634                           ;psect for function _printf
   635  06B9                     _printf:	
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   639                           ;printf@f stored from wreg
   640  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   641  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   642  06BB  00A3               	movwf	printf@f
   643                           
   644                           ;doprnt.c: 466: va_list ap;
   645                           ;doprnt.c: 499: signed char c;
   646                           ;doprnt.c: 506: signed char prec;
   647                           ;doprnt.c: 508: unsigned char flag;
   648                           ;doprnt.c: 523: union {
   649                           ;doprnt.c: 524: unsigned long vd;
   650                           ;doprnt.c: 525: double integ;
   651                           ;doprnt.c: 526: } tmpval;
   652                           ;doprnt.c: 528: unsigned int val;
   653                           ;doprnt.c: 529: unsigned len;
   654                           ;doprnt.c: 530: const char * cp;
   655                           ;doprnt.c: 533: *ap = __va_start();
   656  06BC  3077               	movlw	(low (?_printf| 0))& (0+255)
   657  06BD  00F8               	movwf	??_printf
   658  06BE  0878               	movf	??_printf,w
   659  06BF  00A1               	movwf	printf@ap
   660  06C0                     l850:	
   661                           ;doprnt.c: 1422: {
   662                           
   663                           ;doprnt.c: 536: while(c = *f++) {
   664                           
   665  06C0  3001               	movlw	1
   666  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   667  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   668  06C3  07A3               	addwf	printf@f,f
   669  06C4  30FF               	movlw	-1
   670  06C5  0723               	addwf	printf@f,w
   671  06C6  0084               	movwf	4
   672  06C7  120A  118A  200D  120A  118A  	fcall	stringdir
   673  06CC  00F8               	movwf	??_printf
   674  06CD  0878               	movf	??_printf,w
   675  06CE  00A2               	movwf	printf@c
   676  06CF  0822               	movf	printf@c,w
   677  06D0  1903               	btfsc	3,2
   678  06D1  0008               	return
   679                           
   680                           ;doprnt.c: 538: if(c != '%')
   681  06D2  3025               	movlw	37
   682  06D3  0622               	xorwf	printf@c,w
   683  06D4  1903               	btfsc	3,2
   684  06D5  2EDD               	goto	l830
   685                           
   686                           ;doprnt.c: 540: {
   687                           ;doprnt.c: 541: (putch(c) );
   688  06D6  0822               	movf	printf@c,w
   689  06D7  120A  118A  2682  120A  118A  	fcall	_putch
   690                           
   691                           ;doprnt.c: 542: continue;
   692  06DC  2EC0               	goto	l850
   693  06DD                     l830:	
   694                           
   695                           ;doprnt.c: 543: }
   696                           ;doprnt.c: 548: flag = 0;
   697  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   698  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   699  06DF  01A0               	clrf	printf@flag
   700                           
   701                           ;doprnt.c: 635: switch(c = *f++) {
   702  06E0  2F14               	goto	l848
   703  06E1                     l832:	
   704                           ;doprnt.c: 728: case 's':
   705                           
   706                           ;doprnt.c: 638: goto alldone;
   707                           
   708                           ;doprnt.c: 637: case 0:
   709                           
   710                           
   711                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
   712  06E1  0821               	movf	printf@ap,w
   713  06E2  0084               	movwf	4
   714  06E3  0800               	movf	0,w
   715  06E4  00A4               	movwf	printf@cp
   716  06E5  3000               	movlw	0
   717  06E6  00A5               	movwf	printf@cp+1
   718  06E7  3001               	movlw	1
   719  06E8  00F8               	movwf	??_printf
   720  06E9  0878               	movf	??_printf,w
   721  06EA  07A1               	addwf	printf@ap,f
   722                           
   723                           ;doprnt.c: 740: if(!cp)
   724  06EB  0824               	movf	printf@cp,w
   725  06EC  0425               	iorwf	printf@cp+1,w
   726  06ED  1D03               	btfss	3,2
   727  06EE  2EF3               	goto	l844
   728                           
   729                           ;doprnt.c: 741: cp = "(null)";
   730  06EF  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   731  06F0  00A4               	movwf	printf@cp
   732  06F1  3080               	movlw	128
   733  06F2  00A5               	movwf	printf@cp+1
   734  06F3                     l844:	
   735                           ;doprnt.c: 777: while(*cp)
   736                           
   737  06F3  0825               	movf	printf@cp+1,w
   738  06F4  00FF               	movwf	127
   739  06F5  0824               	movf	printf@cp,w
   740  06F6  0084               	movwf	4
   741  06F7  120A  118A  2003  120A  118A  	fcall	stringtab
   742  06FC  3A00               	xorlw	0
   743  06FD  1903               	btfsc	3,2
   744  06FE  2EC0               	goto	l850
   745                           
   746                           ;doprnt.c: 778: (putch(*cp++) );
   747  06FF  0825               	movf	printf@cp+1,w
   748  0700  00FF               	movwf	127
   749  0701  0824               	movf	printf@cp,w
   750  0702  0084               	movwf	4
   751  0703  120A  118A  2003  120A  118A  	fcall	stringtab
   752  0708  120A  118A  2682  120A  118A  	fcall	_putch
   753  070D  3001               	movlw	1
   754  070E  1283               	bcf	3,5	;RP0=0, select bank0
   755  070F  1303               	bcf	3,6	;RP1=0, select bank0
   756  0710  07A4               	addwf	printf@cp,f
   757  0711  1803               	skipnc
   758  0712  0AA5               	incf	printf@cp+1,f
   759  0713  2EF3               	goto	l844
   760  0714                     l848:	
   761                           ;doprnt.c: 822: }
   762                           
   763                           ;doprnt.c: 813: continue;
   764                           
   765                           ;doprnt.c: 802: default:
   766                           
   767                           ;doprnt.c: 779: continue;
   768                           
   769  0714  3001               	movlw	1
   770  0715  07A3               	addwf	printf@f,f
   771  0716  30FF               	movlw	-1
   772  0717  0723               	addwf	printf@f,w
   773  0718  0084               	movwf	4
   774  0719  120A  118A  200D  120A  118A  	fcall	stringdir
   775  071E  00A2               	movwf	printf@c
   776                           
   777                           ; Switch size 1, requested type "space"
   778                           ; Number of cases is 2, Range of values is 0 to 115
   779                           ; switch strategies available:
   780                           ; Name         Instructions Cycles
   781                           ; simple_byte            7     4 (average)
   782                           ; jumptable            260     6 (fixed)
   783                           ;	Chosen strategy is simple_byte
   784  071F  3A00               	xorlw	0	; case 0
   785  0720  1903               	skipnz
   786  0721  2F27               	goto	l70
   787  0722  3A73               	xorlw	115	; case 115
   788  0723  1903               	skipnz
   789  0724  2EE1               	goto	l832
   790  0725  2EC0               	goto	l850
   791  0726  2EC0               	goto	l850
   792  0727                     l70:	
   793                           ;doprnt.c: 1540: return 0;
   794                           ;	Return value of _printf is never used
   795                           
   796                           ;doprnt.c: 1469: }
   797                           ;doprnt.c: 1533: }
   798                           ;doprnt.c: 1535: alldone:
   799                           
   800  0727  0008               	return
   801  0728                     __end_of_printf:	
   802                           
   803                           	psect	text2
   804  0682                     __ptext2:	
   805 ;; *************** function _putch *****************
   806 ;; Defined at:
   807 ;;		line 94 in file "display81.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  dat             1    wreg     unsigned char 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  dat             1    4[COMMON] unsigned char 
   812 ;;  t               2    5[COMMON] int 
   813 ;;  estado          2    2[COMMON] int 
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         5       0       0       0       0
   825 ;;      Temps:          2       0       0       0       0
   826 ;;      Totals:         7       0       0       0       0
   827 ;;Total ram usage:        7 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; This function calls:
   830 ;;		Nothing
   831 ;; This function is called by:
   832 ;;		_printf
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _putch
   838  0682                     _putch:	
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _putch: [wreg+status,2+status,0]
   842                           ;putch@dat stored from wreg
   843  0682  00F4               	movwf	putch@dat
   844                           
   845                           ;display81.c: 95: int t, estado;
   846                           ;display81.c: 97: PORTEbits.RE0 = 0;
   847  0683  1283               	bcf	3,5	;RP0=0, select bank0
   848  0684  1303               	bcf	3,6	;RP1=0, select bank0
   849  0685  1009               	bcf	9,0	;volatile
   850                           
   851                           ;display81.c: 98: t = 0;
   852  0686  01F5               	clrf	putch@t
   853  0687  01F6               	clrf	putch@t+1
   854                           
   855                           ;display81.c: 99: PORTEbits.RE1 = 1;
   856  0688  1489               	bsf	9,1	;volatile
   857                           
   858                           ;display81.c: 100: t = 0;
   859  0689  01F5               	clrf	putch@t
   860  068A  01F6               	clrf	putch@t+1
   861  068B                     l722:	
   862                           ;display81.c: 101: do {
   863                           
   864                           
   865                           ;display81.c: 102: PORTEbits.RE2 = 1;
   866  068B  1509               	bsf	9,2	;volatile
   867                           
   868                           ;display81.c: 103: t = 0;
   869  068C  01F5               	clrf	putch@t
   870  068D  01F6               	clrf	putch@t+1
   871                           
   872                           ;display81.c: 104: estado = (PORTD & 0x80);
   873  068E  0808               	movf	8,w	;volatile
   874  068F  3980               	andlw	128
   875  0690  00F0               	movwf	??_putch
   876  0691  01F1               	clrf	??_putch+1
   877  0692  0870               	movf	??_putch,w
   878  0693  00F2               	movwf	putch@estado
   879  0694  0871               	movf	??_putch+1,w
   880  0695  00F3               	movwf	putch@estado+1
   881                           
   882                           ;display81.c: 105: PORTEbits.RE2 = 0;
   883  0696  1109               	bcf	9,2	;volatile
   884                           
   885                           ;display81.c: 106: t = 0;
   886  0697  01F5               	clrf	putch@t
   887  0698  01F6               	clrf	putch@t+1
   888                           
   889                           ;display81.c: 107: PORTEbits.RE2 = 1;
   890  0699  1509               	bsf	9,2	;volatile
   891                           
   892                           ;display81.c: 108: t = 0;
   893  069A  01F5               	clrf	putch@t
   894  069B  01F6               	clrf	putch@t+1
   895                           
   896                           ;display81.c: 109: PORTEbits.RE2 = 0;
   897  069C  1109               	bcf	9,2	;volatile
   898                           
   899                           ;display81.c: 110: t = 0;
   900  069D  01F5               	clrf	putch@t
   901  069E  01F6               	clrf	putch@t+1
   902                           
   903                           ;display81.c: 111: } while (estado != 0);
   904  069F  0872               	movf	putch@estado,w
   905  06A0  0473               	iorwf	putch@estado+1,w
   906  06A1  1D03               	btfss	3,2
   907  06A2  2E8B               	goto	l722
   908                           
   909                           ;display81.c: 112: PORTEbits.RE0 = 1;
   910  06A3  1409               	bsf	9,0	;volatile
   911                           
   912                           ;display81.c: 113: t = 0;
   913  06A4  01F5               	clrf	putch@t
   914  06A5  01F6               	clrf	putch@t+1
   915                           
   916                           ;display81.c: 114: PORTEbits.RE1 = 0;
   917  06A6  1089               	bcf	9,1	;volatile
   918                           
   919                           ;display81.c: 115: TRISD = 0x00;
   920  06A7  1683               	bsf	3,5	;RP0=1, select bank1
   921  06A8  1303               	bcf	3,6	;RP1=0, select bank1
   922  06A9  0188               	clrf	8	;volatile
   923                           
   924                           ;display81.c: 116: PORTD = dat;
   925  06AA  0874               	movf	putch@dat,w
   926  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   927  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   928  06AD  0088               	movwf	8	;volatile
   929                           
   930                           ;display81.c: 117: PORTEbits.RE2 = 1;
   931  06AE  1509               	bsf	9,2	;volatile
   932                           
   933                           ;display81.c: 118: t = 0;
   934  06AF  01F5               	clrf	putch@t
   935  06B0  01F6               	clrf	putch@t+1
   936                           
   937                           ;display81.c: 119: PORTEbits.RE2 = 0;
   938  06B1  1109               	bcf	9,2	;volatile
   939                           
   940                           ;display81.c: 120: t = 0;
   941  06B2  01F5               	clrf	putch@t
   942  06B3  01F6               	clrf	putch@t+1
   943                           
   944                           ;display81.c: 121: TRISD = 0xFF;
   945  06B4  30FF               	movlw	255
   946  06B5  1683               	bsf	3,5	;RP0=1, select bank1
   947  06B6  1303               	bcf	3,6	;RP1=0, select bank1
   948  06B7  0088               	movwf	8	;volatile
   949  06B8  0008               	return
   950  06B9                     __end_of_putch:	
   951                           
   952                           	psect	text3
   953  0621                     __ptext3:	
   954 ;; *************** function _confBusLCD *****************
   955 ;; Defined at:
   956 ;;		line 41 in file "display81.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  t               2    4[COMMON] int 
   961 ;;  estado          2    2[COMMON] int 
   962 ;; Return value:  Size  Location     Type
   963 ;;		None               void
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         4       0       0       0       0
   973 ;;      Temps:          2       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           
   985                           ;psect for function _confBusLCD
   986  0621                     _confBusLCD:	
   987                           
   988                           ;display81.c: 42: int t, estado;
   989                           ;display81.c: 44: PORTEbits.RE0 = 0;
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _confBusLCD: [wreg+status,2+status,0]
   993  0621  1283               	bcf	3,5	;RP0=0, select bank0
   994  0622  1303               	bcf	3,6	;RP1=0, select bank0
   995  0623  1009               	bcf	9,0	;volatile
   996                           
   997                           ;display81.c: 45: t = 0;
   998  0624  01F4               	clrf	confBusLCD@t
   999  0625  01F5               	clrf	confBusLCD@t+1
  1000                           
  1001                           ;display81.c: 46: PORTEbits.RE1 = 1;
  1002  0626  1489               	bsf	9,1	;volatile
  1003                           
  1004                           ;display81.c: 47: t = 0;
  1005  0627  01F4               	clrf	confBusLCD@t
  1006  0628  01F5               	clrf	confBusLCD@t+1
  1007  0629                     l762:	
  1008                           ;display81.c: 48: do {
  1009                           
  1010                           
  1011                           ;display81.c: 49: PORTEbits.RE2 = 1;
  1012  0629  1509               	bsf	9,2	;volatile
  1013                           
  1014                           ;display81.c: 50: t = 0;
  1015  062A  01F4               	clrf	confBusLCD@t
  1016  062B  01F5               	clrf	confBusLCD@t+1
  1017                           
  1018                           ;display81.c: 51: estado = (PORTD & 0x80);
  1019  062C  0808               	movf	8,w	;volatile
  1020  062D  3980               	andlw	128
  1021  062E  00F0               	movwf	??_confBusLCD
  1022  062F  01F1               	clrf	??_confBusLCD+1
  1023  0630  0870               	movf	??_confBusLCD,w
  1024  0631  00F2               	movwf	confBusLCD@estado
  1025  0632  0871               	movf	??_confBusLCD+1,w
  1026  0633  00F3               	movwf	confBusLCD@estado+1
  1027                           
  1028                           ;display81.c: 52: PORTEbits.RE2 = 0;
  1029  0634  1109               	bcf	9,2	;volatile
  1030                           
  1031                           ;display81.c: 53: t = 0;
  1032  0635  01F4               	clrf	confBusLCD@t
  1033  0636  01F5               	clrf	confBusLCD@t+1
  1034                           
  1035                           ;display81.c: 54: } while (estado != 0);
  1036  0637  0872               	movf	confBusLCD@estado,w
  1037  0638  0473               	iorwf	confBusLCD@estado+1,w
  1038  0639  1D03               	btfss	3,2
  1039  063A  2E29               	goto	l762
  1040                           
  1041                           ;display81.c: 56: PORTEbits.RE1 = 0;
  1042  063B  1089               	bcf	9,1	;volatile
  1043                           
  1044                           ;display81.c: 57: TRISD = 0x00;
  1045  063C  1683               	bsf	3,5	;RP0=1, select bank1
  1046  063D  1303               	bcf	3,6	;RP1=0, select bank1
  1047  063E  0188               	clrf	8	;volatile
  1048                           
  1049                           ;display81.c: 58: PORTD = 0x30;
  1050  063F  3030               	movlw	48
  1051  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0642  0088               	movwf	8	;volatile
  1054                           
  1055                           ;display81.c: 59: PORTEbits.RE2 = 1;
  1056  0643  1509               	bsf	9,2	;volatile
  1057                           
  1058                           ;display81.c: 60: t = 0;
  1059  0644  01F4               	clrf	confBusLCD@t
  1060  0645  01F5               	clrf	confBusLCD@t+1
  1061                           
  1062                           ;display81.c: 61: PORTEbits.RE2 = 0;
  1063  0646  1109               	bcf	9,2	;volatile
  1064                           
  1065                           ;display81.c: 62: t = 0;
  1066  0647  01F4               	clrf	confBusLCD@t
  1067  0648  01F5               	clrf	confBusLCD@t+1
  1068                           
  1069                           ;display81.c: 63: TRISD = 0xFF;
  1070  0649  30FF               	movlw	255
  1071  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1072  064B  1303               	bcf	3,6	;RP1=0, select bank1
  1073  064C  0088               	movwf	8	;volatile
  1074  064D  0008               	return
  1075  064E                     __end_of_confBusLCD:	
  1076                           
  1077                           	psect	text4
  1078  064E                     __ptext4:	
  1079 ;; *************** function _comando *****************
  1080 ;; Defined at:
  1081 ;;		line 66 in file "display81.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  com             1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  com             1    4[COMMON] unsigned char 
  1086 ;;  t               2    5[COMMON] int 
  1087 ;;  estado          2    2[COMMON] int 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;		None               void
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         5       0       0       0       0
  1099 ;;      Temps:          2       0       0       0       0
  1100 ;;      Totals:         7       0       0       0       0
  1101 ;;Total ram usage:        7 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _comando
  1112  064E                     _comando:	
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _comando: [wreg+status,2+status,0]
  1116                           ;comando@com stored from wreg
  1117  064E  00F4               	movwf	comando@com
  1118                           
  1119                           ;display81.c: 67: int t, estado;
  1120                           ;display81.c: 69: PORTEbits.RE0 = 0;
  1121  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1123  0651  1009               	bcf	9,0	;volatile
  1124                           
  1125                           ;display81.c: 70: t = 0;
  1126  0652  01F5               	clrf	comando@t
  1127  0653  01F6               	clrf	comando@t+1
  1128                           
  1129                           ;display81.c: 71: PORTEbits.RE1 = 1;
  1130  0654  1489               	bsf	9,1	;volatile
  1131                           
  1132                           ;display81.c: 72: t = 0;
  1133  0655  01F5               	clrf	comando@t
  1134  0656  01F6               	clrf	comando@t+1
  1135  0657                     l792:	
  1136                           ;display81.c: 73: do {
  1137                           
  1138                           
  1139                           ;display81.c: 74: PORTEbits.RE2 = 1;
  1140  0657  1509               	bsf	9,2	;volatile
  1141                           
  1142                           ;display81.c: 75: t = 0;
  1143  0658  01F5               	clrf	comando@t
  1144  0659  01F6               	clrf	comando@t+1
  1145                           
  1146                           ;display81.c: 76: estado = (PORTD & 0x80);
  1147  065A  0808               	movf	8,w	;volatile
  1148  065B  3980               	andlw	128
  1149  065C  00F0               	movwf	??_comando
  1150  065D  01F1               	clrf	??_comando+1
  1151  065E  0870               	movf	??_comando,w
  1152  065F  00F2               	movwf	comando@estado
  1153  0660  0871               	movf	??_comando+1,w
  1154  0661  00F3               	movwf	comando@estado+1
  1155                           
  1156                           ;display81.c: 77: PORTEbits.RE2 = 0;
  1157  0662  1109               	bcf	9,2	;volatile
  1158                           
  1159                           ;display81.c: 78: t = 0;
  1160  0663  01F5               	clrf	comando@t
  1161  0664  01F6               	clrf	comando@t+1
  1162                           
  1163                           ;display81.c: 79: PORTEbits.RE2 = 1;
  1164  0665  1509               	bsf	9,2	;volatile
  1165                           
  1166                           ;display81.c: 80: t = 0;
  1167  0666  01F5               	clrf	comando@t
  1168  0667  01F6               	clrf	comando@t+1
  1169                           
  1170                           ;display81.c: 81: PORTEbits.RE2 = 0;
  1171  0668  1109               	bcf	9,2	;volatile
  1172                           
  1173                           ;display81.c: 82: t = 0;
  1174  0669  01F5               	clrf	comando@t
  1175  066A  01F6               	clrf	comando@t+1
  1176                           
  1177                           ;display81.c: 83: } while (estado != 0);
  1178  066B  0872               	movf	comando@estado,w
  1179  066C  0473               	iorwf	comando@estado+1,w
  1180  066D  1D03               	btfss	3,2
  1181  066E  2E57               	goto	l792
  1182                           
  1183                           ;display81.c: 84: PORTEbits.RE1 = 0;
  1184  066F  1089               	bcf	9,1	;volatile
  1185                           
  1186                           ;display81.c: 85: TRISD = 0x00;
  1187  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0672  0188               	clrf	8	;volatile
  1190                           
  1191                           ;display81.c: 86: PORTD = com;
  1192  0673  0874               	movf	comando@com,w
  1193  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0676  0088               	movwf	8	;volatile
  1196                           
  1197                           ;display81.c: 87: PORTEbits.RE2 = 1;
  1198  0677  1509               	bsf	9,2	;volatile
  1199                           
  1200                           ;display81.c: 88: t = 0;
  1201  0678  01F5               	clrf	comando@t
  1202  0679  01F6               	clrf	comando@t+1
  1203                           
  1204                           ;display81.c: 89: PORTEbits.RE2 = 0;
  1205  067A  1109               	bcf	9,2	;volatile
  1206                           
  1207                           ;display81.c: 90: t = 0;
  1208  067B  01F5               	clrf	comando@t
  1209  067C  01F6               	clrf	comando@t+1
  1210                           
  1211                           ;display81.c: 91: TRISD = 0xFF;
  1212  067D  30FF               	movlw	255
  1213  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1214  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0680  0088               	movwf	8	;volatile
  1216  0681  0008               	return
  1217  0682                     __end_of_comando:	
  1218  007E                     btemp	set	126	;btemp
  1219  007E                     wtemp	set	126
  1220  007E                     wtemp0	set	126
  1221  0080                     wtemp1	set	128
  1222  0082                     wtemp2	set	130
  1223  0084                     wtemp3	set	132
  1224  0086                     wtemp4	set	134
  1225  0088                     wtemp5	set	136
  1226  007F                     wtemp6	set	127
  1227  007E                     ttemp	set	126
  1228  007E                     ttemp0	set	126
  1229  0081                     ttemp1	set	129
  1230  0084                     ttemp2	set	132
  1231  0087                     ttemp3	set	135
  1232  007F                     ttemp4	set	127
  1233  007E                     ltemp	set	126
  1234  007E                     ltemp0	set	126
  1235  0082                     ltemp1	set	130
  1236  0086                     ltemp2	set	134
  1237  0080                     ltemp3	set	128


Data Sizes:
    Strings     10
    Constant    0
    Data        28
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     36      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[7]), main@r_dos(BANK0[14]), main@r_uno(BANK0[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0     516
                                              9 COMMON     4     4      0
                                              6 BANK0     30    30      0
                            _comando
                         _confBusLCD
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              17    16      1     292
                                              7 COMMON     2     1      1
                                              0 BANK0      6     6      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                7     7      0      54
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _confBusLCD                                           6     6      0      29
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _comando                                              7     7      0      53
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando
   _confBusLCD
   _printf
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov  8 23:50:34 2018

                      pc 0002                       l70 0727                       fsr 0004  
                    l722 068B                      l830 06DD                      l832 06E1  
                    l762 0629                      l850 06C0                      l844 06F3  
                    l792 0657                      l848 0714                      l880 079F  
                    l874 0790                      l888 07C5                      u210 0730  
                    u220 0745                      u235 079D                      u245 07C3  
                    u255 07D2                      u277 07A5                      u287 07DA  
          comando@estado 0072                      fsr0 0004                      indf 0000  
                   STR_1 001A                     STR_2 001A                     STR_3 0013  
                   _main 0728                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _ANSEL 0188                    _PORTD 0008                    _TRISD 0088  
                  _TRISE 0089            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
        __end_of_comando 0682                    _putch 0682                    main@n 0042  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F0             __end_of_main 07F0                   ??_main 0079  
                 ?_putch 0070                   _printf 06B9                ??_comando 0070  
                 putch@t 0075  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0605            __end_of_putch 06B9                  ??_putch 0070  
             __pmaintext 0728               _confBusLCD 0621                  ?_printf 0077  
             __stringtab 0003                  __ptext1 06B9                  __ptext2 0682  
                __ptext3 0621                  __ptext4 064E                  _comando 064E  
        __size_of_printf 006F     end_of_initialization 07FC                  printf@c 0022  
                printf@f 0023              ?_confBusLCD 0070                _PORTEbits 0009  
             comando@com 0074           __end_of_printf 0728      start_initialization 07F0  
            putch@estado 0072      __size_of_confBusLCD 002D               init_fetch0 05F4  
            __pdataBANK0 0044         confBusLCD@estado 0072                 ??_printf 0078  
              ___latbits 0002            __pcstackBANK0 0020   __CFG_FOSC$INTRC_CLKOUT 0000  
              __pstrings 0003                 ?_comando 0070           __size_of_putch 0037  
              main@F1713 0044                main@F1715 0052             ??_confBusLCD 0070  
            __stringbase 0012               printf@flag 0020                main@r_dos 0034  
              main@r_uno 0026       __end_of_confBusLCD 064E       __end_of__stringtab 0013  
       __size_of_comando 0034            __size_of_main 00C8                 comando@t 0075  
               init_ram0 05F8                stringcode 000D                 printf@ap 0021  
               printf@cp 0024                 putch@dat 0074              confBusLCD@t 0074  
               stringdir 000D                 stringtab 0003  
