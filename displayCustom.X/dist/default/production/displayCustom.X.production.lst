

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Nov 22 23:37:19 2018

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  008F                     	;# 
    61  0090                     	;# 
    62  0091                     	;# 
    63  0092                     	;# 
    64  0093                     	;# 
    65  0093                     	;# 
    66  0093                     	;# 
    67  0094                     	;# 
    68  0095                     	;# 
    69  0096                     	;# 
    70  0097                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  0105                     	;# 
    80  0107                     	;# 
    81  0108                     	;# 
    82  0109                     	;# 
    83  010C                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  0185                     	;# 
    89  0187                     	;# 
    90  0188                     	;# 
    91  0189                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94                           
    95                           	psect	idataBANK0
    96  069D                     __pidataBANK0:	
    97                           
    98                           ;initializer for main@F1716
    99  069D  3400               	retlw	0
   100  069E  3400               	retlw	0
   101  069F  340A               	retlw	10
   102  06A0  341F               	retlw	31
   103  06A1  341F               	retlw	31
   104  06A2  340E               	retlw	14
   105  06A3  3404               	retlw	4
   106  06A4  3400               	retlw	0
   107                           
   108                           ;initializer for main@F1718
   109  06A5  341F               	retlw	31
   110  06A6  340D               	retlw	13
   111  06A7  340D               	retlw	13
   112  06A8  340D               	retlw	13
   113  06A9  340D               	retlw	13
   114  06AA  3405               	retlw	5
   115  06AB  340A               	retlw	10
   116  06AC  340F               	retlw	15
   117  0007                     _PORTCbits	set	7
   118  0008                     _PORTD	set	8
   119  0009                     _PORTEbits	set	9
   120  0087                     _TRISC	set	135
   121  0088                     _TRISD	set	136
   122  0089                     _TRISE	set	137
   123  0188                     _ANSEL	set	392
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  07F0                     start_initialization:	
   129  07F0                     __initialization:	
   130                           
   131                           ; Initialize objects allocated to BANK0
   132  07F0  1383               	bcf	3,7	;select IRP bank0
   133  07F1  3044               	movlw	low (__pdataBANK0+16)
   134  07F2  00FD               	movwf	btemp+-1
   135  07F3  3006               	movlw	high __pidataBANK0
   136  07F4  00FE               	movwf	btemp
   137  07F5  309D               	movlw	low __pidataBANK0
   138  07F6  00FF               	movwf	btemp+1
   139  07F7  3034               	movlw	low __pdataBANK0
   140  07F8  0084               	movwf	4
   141  07F9  120A  118A  26B1   	fcall	init_ram0
   142  07FC                     end_of_initialization:	
   143                           ;End of C runtime variable initialization code
   144                           
   145  07FC                     __end_of__initialization:	
   146  07FC  0183               	clrf	3
   147  07FD  120A  118A  2F6F   	ljmp	_main	;jump to C main() function
   148                           
   149                           	psect	dataBANK0
   150  0034                     __pdataBANK0:	
   151  0034                     main@F1716:	
   152  0034                     	ds	8
   153  003C                     main@F1718:	
   154  003C                     	ds	8
   155                           
   156                           	psect	inittext
   157  06AD                     init_fetch0:	
   158                           ;	Called with low address in FSR and high address in W
   159                           
   160  06AD  087E               	movf	126,w
   161  06AE  008A               	movwf	10
   162  06AF  087F               	movf	127,w
   163  06B0  0082               	movwf	2
   164  06B1                     init_ram0:	
   165                           ;Called with:
   166                           ;	high address of idata address in btemp 
   167                           ;	low address of idata address in btemp+1 
   168                           ;	low address of data in FSR
   169                           ;	high address + 1 of data in btemp-1
   170                           
   171  06B1  26AD  120A  118A   	fcall	init_fetch0
   172  06B4  0080               	movwf	0
   173  06B5  0A84               	incf	4,f
   174  06B6  0804               	movf	4,w
   175  06B7  067D               	xorwf	125,w
   176  06B8  1903               	btfsc	3,2
   177  06B9  3400               	retlw	0
   178  06BA  0AFF               	incf	127,f
   179  06BB  1903               	btfsc	3,2
   180  06BC  0AFE               	incf	126,f
   181  06BD  2EB1               	goto	init_ram0
   182                           
   183                           	psect	cstackCOMMON
   184  0070                     __pcstackCOMMON:	
   185  0070                     ?_configurarLCD:	
   186  0070                     ??_configurarLCD:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0070                     ?_comando:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ??_comando:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_escribirDato:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ??_escribirDato:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_main:	
   202                           ; 0 bytes @ 0x0
   203                           
   204                           
   205                           ; 2 bytes @ 0x0
   206  0070                     	ds	2
   207  0072                     configurarLCD@estado:	
   208  0072                     comando@estado:	
   209                           ; 2 bytes @ 0x2
   210                           
   211  0072                     escribirDato@estado:	
   212                           ; 2 bytes @ 0x2
   213                           
   214                           
   215                           ; 2 bytes @ 0x2
   216  0072                     	ds	2
   217  0074                     comando@command:	
   218  0074                     escribirDato@data:	
   219                           ; 1 bytes @ 0x4
   220                           
   221  0074                     configurarLCD@t:	
   222                           ; 1 bytes @ 0x4
   223                           
   224                           
   225                           ; 2 bytes @ 0x4
   226  0074                     	ds	1
   227  0075                     comando@t:	
   228  0075                     escribirDato@t:	
   229                           ; 2 bytes @ 0x5
   230                           
   231                           
   232                           ; 2 bytes @ 0x5
   233  0075                     	ds	2
   234  0077                     ?_crearCaracter:	
   235  0077                     crearCaracter@address:	
   236                           ; 0 bytes @ 0x7
   237                           
   238                           
   239                           ; 1 bytes @ 0x7
   240  0077                     	ds	1
   241  0078                     ??_crearCaracter:	
   242                           
   243                           ; 0 bytes @ 0x8
   244  0078                     	ds	1
   245  0079                     crearCaracter@pattern:	
   246                           
   247                           ; 1 bytes @ 0x9
   248  0079                     	ds	1
   249  007A                     crearCaracter@i:	
   250                           
   251                           ; 1 bytes @ 0xA
   252  007A                     	ds	1
   253                           
   254                           	psect	cstackBANK0
   255  0020                     __pcstackBANK0:	
   256  0020                     ??_main:	
   257                           
   258                           ; 0 bytes @ 0x0
   259  0020                     	ds	4
   260  0024                     main@pattern1:	
   261                           
   262                           ; 8 bytes @ 0x4
   263  0024                     	ds	8
   264  002C                     main@pattern2:	
   265                           
   266                           ; 8 bytes @ 0xC
   267  002C                     	ds	8
   268                           
   269                           	psect	maintext
   270  076F                     __pmaintext:	
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 23 in file "custom1.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  pattern2        8   12[BANK0 ] unsigned char [8]
   281 ;;  pattern1        8    4[BANK0 ] unsigned char [8]
   282 ;; Return value:  Size  Location     Type
   283 ;;                  2   24[None  ] int 
   284 ;; Registers used:
   285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : B00/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0      16       0       0       0
   293 ;;      Temps:          0       4       0       0       0
   294 ;;      Totals:         0      20       0       0       0
   295 ;;Total ram usage:       20 bytes
   296 ;; Hardware stack levels required when called:    2
   297 ;; This function calls:
   298 ;;		_comando
   299 ;;		_configurarLCD
   300 ;;		_crearCaracter
   301 ;;		_escribirDato
   302 ;; This function is called by:
   303 ;;		Startup code after reset
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           
   308                           ;psect for function _main
   309  076F                     _main:	
   310                           
   311                           ;custom1.c: 24: unsigned char pattern1[] = {0x00, 0x00, 0x0a, 0x1f, 0x1f, 0x0e, 0x04, 0x
      +                          00};
   312                           
   313                           ;incstack = 0
   314                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   315  076F  3024               	movlw	main@pattern1& (0+255)
   316  0770  0084               	movwf	4
   317  0771  3034               	movlw	low main@F1716
   318  0772  1283               	bcf	3,5	;RP0=0, select bank0
   319  0773  1303               	bcf	3,6	;RP1=0, select bank0
   320  0774  00A0               	movwf	??_main
   321  0775  0804               	movf	4,w
   322  0776  00A1               	movwf	??_main+1
   323  0777  3008               	movlw	8
   324  0778  00A2               	movwf	??_main+2
   325  0779                     u150:	
   326  0779  0820               	movf	??_main,w
   327  077A  0084               	movwf	4
   328  077B  1383               	bcf	3,7	;select IRP bank0
   329  077C  0800               	movf	0,w
   330  077D  00A3               	movwf	??_main+3
   331  077E  0AA0               	incf	??_main,f
   332  077F  0821               	movf	??_main+1,w
   333  0780  0084               	movwf	4
   334  0781  0823               	movf	??_main+3,w
   335  0782  0080               	movwf	0
   336  0783  0AA1               	incf	??_main+1,f
   337  0784  0BA2               	decfsz	??_main+2,f
   338  0785  2F79               	goto	u150
   339                           
   340                           ;custom1.c: 25: unsigned char pattern2[] = {0x1F, 0x0D, 0x0D, 0x0D, 0x0D, 0x05, 0x0A, 0x
      +                          0F};
   341  0786  302C               	movlw	main@pattern2& (0+255)
   342  0787  0084               	movwf	4
   343  0788  303C               	movlw	low main@F1718
   344  0789  00A0               	movwf	??_main
   345  078A  0804               	movf	4,w
   346  078B  00A1               	movwf	??_main+1
   347  078C  3008               	movlw	8
   348  078D  00A2               	movwf	??_main+2
   349  078E                     u160:	
   350  078E  0820               	movf	??_main,w
   351  078F  0084               	movwf	4
   352  0790  1383               	bcf	3,7	;select IRP bank0
   353  0791  0800               	movf	0,w
   354  0792  00A3               	movwf	??_main+3
   355  0793  0AA0               	incf	??_main,f
   356  0794  0821               	movf	??_main+1,w
   357  0795  0084               	movwf	4
   358  0796  0823               	movf	??_main+3,w
   359  0797  0080               	movwf	0
   360  0798  0AA1               	incf	??_main+1,f
   361  0799  0BA2               	decfsz	??_main+2,f
   362  079A  2F8E               	goto	u160
   363                           
   364                           ;custom1.c: 27: TRISC = 0xFE;
   365  079B  30FE               	movlw	254
   366  079C  1683               	bsf	3,5	;RP0=1, select bank1
   367  079D  1303               	bcf	3,6	;RP1=0, select bank1
   368  079E  0087               	movwf	7	;volatile
   369                           
   370                           ;custom1.c: 28: TRISD = 0xFF;
   371  079F  30FF               	movlw	255
   372  07A0  0088               	movwf	8	;volatile
   373                           
   374                           ;custom1.c: 29: TRISE = 0xF8;
   375  07A1  30F8               	movlw	248
   376  07A2  0089               	movwf	9	;volatile
   377                           
   378                           ;custom1.c: 30: ANSEL = 0;
   379  07A3  1683               	bsf	3,5	;RP0=1, select bank3
   380  07A4  1703               	bsf	3,6	;RP1=1, select bank3
   381  07A5  0188               	clrf	8	;volatile
   382                           
   383                           ;custom1.c: 31: configurarLCD();
   384  07A6  120A  118A  26E5  120A  118A  	fcall	_configurarLCD
   385                           
   386                           ;custom1.c: 32: comando(0x0C);
   387  07AB  300C               	movlw	12
   388  07AC  120A  118A  2712  120A  118A  	fcall	_comando
   389                           
   390                           ;custom1.c: 33: comando(0x38);
   391  07B1  3038               	movlw	56
   392  07B2  120A  118A  2712  120A  118A  	fcall	_comando
   393                           
   394                           ;custom1.c: 34: comando(0x01);
   395  07B7  3001               	movlw	1
   396  07B8  120A  118A  2712  120A  118A  	fcall	_comando
   397                           
   398                           ;custom1.c: 35: crearCaracter(pattern1, 1);
   399  07BD  01F7               	clrf	crearCaracter@address
   400  07BE  0AF7               	incf	crearCaracter@address,f
   401  07BF  3024               	movlw	(low (main@pattern1| 0))& (0+255)
   402  07C0  120A  118A  26BE  120A  118A  	fcall	_crearCaracter
   403                           
   404                           ;custom1.c: 36: crearCaracter(pattern2, 2);
   405  07C5  3002               	movlw	2
   406  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   407  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   408  07C8  00A0               	movwf	??_main
   409  07C9  0820               	movf	??_main,w
   410  07CA  00F7               	movwf	crearCaracter@address
   411  07CB  302C               	movlw	(low (main@pattern2| 0))& (0+255)
   412  07CC  120A  118A  26BE  120A  118A  	fcall	_crearCaracter
   413  07D1                     l776:	
   414                           ;custom1.c: 37: while (1) {
   415                           
   416                           
   417                           ;custom1.c: 38: PORTCbits.RC0 = 1;
   418  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   419  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   420  07D3  1407               	bsf	7,0	;volatile
   421                           
   422                           ;custom1.c: 39: comando(0x83);
   423  07D4  3083               	movlw	131
   424  07D5  120A  118A  2712  120A  118A  	fcall	_comando
   425                           
   426                           ;custom1.c: 40: escribirDato(1);
   427  07DA  3001               	movlw	1
   428  07DB  120A  118A  2740  120A  118A  	fcall	_escribirDato
   429                           
   430                           ;custom1.c: 41: PORTCbits.RC0 = 0;
   431  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   432  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   433  07E2  1007               	bcf	7,0	;volatile
   434                           
   435                           ;custom1.c: 42: comando(0x85);
   436  07E3  3085               	movlw	133
   437  07E4  120A  118A  2712  120A  118A  	fcall	_comando
   438                           
   439                           ;custom1.c: 43: escribirDato(2);
   440  07E9  3002               	movlw	2
   441  07EA  120A  118A  2740  120A  118A  	fcall	_escribirDato
   442  07EF  2FD1               	goto	l776
   443  07F0                     __end_of_main:	
   444                           
   445                           	psect	text1
   446  06BE                     __ptext1:	
   447 ;; *************** function _crearCaracter *****************
   448 ;; Defined at:
   449 ;;		line 71 in file "custom1.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;  pattern         1    wreg     PTR unsigned char 
   452 ;;		 -> main@pattern2(8), main@pattern1(8), 
   453 ;;  address         1    7[COMMON] unsigned char 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  pattern         1    9[COMMON] PTR unsigned char 
   456 ;;		 -> main@pattern2(8), main@pattern1(8), 
   457 ;;  i               1   10[COMMON] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;		None               void
   460 ;; Registers used:
   461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   467 ;;      Params:         1       0       0       0       0
   468 ;;      Locals:         2       0       0       0       0
   469 ;;      Temps:          1       0       0       0       0
   470 ;;      Totals:         4       0       0       0       0
   471 ;;Total ram usage:        4 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    1
   474 ;; This function calls:
   475 ;;		_comando
   476 ;;		_escribirDato
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _crearCaracter
   484  06BE                     _crearCaracter:	
   485                           
   486                           ;incstack = 0
   487                           ; Regs used in _crearCaracter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   488                           ;crearCaracter@pattern stored from wreg
   489  06BE  00F9               	movwf	crearCaracter@pattern
   490                           
   491                           ;custom1.c: 72: unsigned char i;
   492                           ;custom1.c: 75: comando(0x40 + (address * 8));
   493  06BF  0877               	movf	crearCaracter@address,w
   494  06C0  00F8               	movwf	??_crearCaracter
   495  06C1  3002               	movlw	2
   496  06C2                     u125:	
   497  06C2  1003               	clrc
   498  06C3  0DF8               	rlf	??_crearCaracter,f
   499  06C4  3EFF               	addlw	-1
   500  06C5  1D03               	skipz
   501  06C6  2EC2               	goto	u125
   502  06C7  1003               	clrc
   503  06C8  0D78               	rlf	??_crearCaracter,w
   504  06C9  3E40               	addlw	64
   505  06CA  120A  118A  2712  120A  118A  	fcall	_comando
   506                           
   507                           ;custom1.c: 76: for (i = 0; i < 8; i++) {
   508  06CF  01FA               	clrf	crearCaracter@i
   509  06D0                     L1:	
   510  06D0  3008               	movlw	8
   511  06D1  027A               	subwf	crearCaracter@i,w
   512  06D2  1803               	btfsc	3,0
   513  06D3  0008               	return
   514                           
   515                           ;custom1.c: 77: escribirDato(pattern[i]);
   516  06D4  087A               	movf	crearCaracter@i,w
   517  06D5  0779               	addwf	crearCaracter@pattern,w
   518  06D6  00F8               	movwf	??_crearCaracter
   519  06D7  0878               	movf	??_crearCaracter,w
   520  06D8  0084               	movwf	4
   521  06D9  1383               	bcf	3,7	;select IRP bank0
   522  06DA  0800               	movf	0,w
   523  06DB  120A  118A  2740  120A  118A  	fcall	_escribirDato
   524  06E0  3001               	movlw	1
   525  06E1  00F8               	movwf	??_crearCaracter
   526  06E2  0878               	movf	??_crearCaracter,w
   527  06E3  07FA               	addwf	crearCaracter@i,f
   528  06E4  2ED0               	goto	L1
   529  06E5                     __end_of_crearCaracter:	
   530                           
   531                           	psect	text2
   532  0740                     __ptext2:	
   533 ;; *************** function _escribirDato *****************
   534 ;; Defined at:
   535 ;;		line 104 in file "custom1.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  data            1    wreg     unsigned char 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  data            1    4[COMMON] unsigned char 
   540 ;;  t               2    5[COMMON] int 
   541 ;;  estado          2    2[COMMON] int 
   542 ;; Return value:  Size  Location     Type
   543 ;;		None               void
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         5       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0
   554 ;;      Totals:         7       0       0       0       0
   555 ;;Total ram usage:        7 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;;		_crearCaracter
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _escribirDato
   567  0740                     _escribirDato:	
   568                           
   569                           ;incstack = 0
   570                           ; Regs used in _escribirDato: [wreg+status,2+status,0]
   571                           ;escribirDato@data stored from wreg
   572  0740  00F4               	movwf	escribirDato@data
   573                           
   574                           ;custom1.c: 105: int t, estado;
   575                           ;custom1.c: 106: PORTEbits.RE0 = 0;
   576  0741  1283               	bcf	3,5	;RP0=0, select bank0
   577  0742  1303               	bcf	3,6	;RP1=0, select bank0
   578  0743  1009               	bcf	9,0	;volatile
   579                           
   580                           ;custom1.c: 107: t = 0;
   581  0744  01F5               	clrf	escribirDato@t
   582  0745  01F6               	clrf	escribirDato@t+1
   583                           
   584                           ;custom1.c: 108: PORTEbits.RE1 = 1;
   585  0746  1489               	bsf	9,1	;volatile
   586                           
   587                           ;custom1.c: 109: t = 0;
   588  0747  01F5               	clrf	escribirDato@t
   589  0748  01F6               	clrf	escribirDato@t+1
   590  0749                     l686:	
   591                           ;custom1.c: 110: do {
   592                           
   593                           
   594                           ;custom1.c: 111: PORTEbits.RE2 = 1;
   595  0749  1509               	bsf	9,2	;volatile
   596                           
   597                           ;custom1.c: 112: t = 0;
   598  074A  01F5               	clrf	escribirDato@t
   599  074B  01F6               	clrf	escribirDato@t+1
   600                           
   601                           ;custom1.c: 113: estado = (PORTD & 0x80);
   602  074C  0808               	movf	8,w	;volatile
   603  074D  3980               	andlw	128
   604  074E  00F0               	movwf	??_escribirDato
   605  074F  01F1               	clrf	??_escribirDato+1
   606  0750  0870               	movf	??_escribirDato,w
   607  0751  00F2               	movwf	escribirDato@estado
   608  0752  0871               	movf	??_escribirDato+1,w
   609  0753  00F3               	movwf	escribirDato@estado+1
   610                           
   611                           ;custom1.c: 114: PORTEbits.RE2 = 0;
   612  0754  1109               	bcf	9,2	;volatile
   613                           
   614                           ;custom1.c: 115: t = 0;
   615  0755  01F5               	clrf	escribirDato@t
   616  0756  01F6               	clrf	escribirDato@t+1
   617                           
   618                           ;custom1.c: 116: } while (estado != 0);
   619  0757  0872               	movf	escribirDato@estado,w
   620  0758  0473               	iorwf	escribirDato@estado+1,w
   621  0759  1D03               	btfss	3,2
   622  075A  2F49               	goto	l686
   623                           
   624                           ;custom1.c: 122: PORTEbits.RE0 = 1;
   625  075B  1409               	bsf	9,0	;volatile
   626                           
   627                           ;custom1.c: 123: PORTEbits.RE1 = 0;
   628  075C  1089               	bcf	9,1	;volatile
   629                           
   630                           ;custom1.c: 124: TRISD = 0x00;
   631  075D  1683               	bsf	3,5	;RP0=1, select bank1
   632  075E  1303               	bcf	3,6	;RP1=0, select bank1
   633  075F  0188               	clrf	8	;volatile
   634                           
   635                           ;custom1.c: 125: PORTD = data;
   636  0760  0874               	movf	escribirDato@data,w
   637  0761  1283               	bcf	3,5	;RP0=0, select bank0
   638  0762  1303               	bcf	3,6	;RP1=0, select bank0
   639  0763  0088               	movwf	8	;volatile
   640                           
   641                           ;custom1.c: 126: PORTEbits.RE2 = 1;
   642  0764  1509               	bsf	9,2	;volatile
   643                           
   644                           ;custom1.c: 127: t = 0;
   645  0765  01F5               	clrf	escribirDato@t
   646  0766  01F6               	clrf	escribirDato@t+1
   647                           
   648                           ;custom1.c: 128: PORTEbits.RE2 = 0;
   649  0767  1109               	bcf	9,2	;volatile
   650                           
   651                           ;custom1.c: 129: t = 0;
   652  0768  01F5               	clrf	escribirDato@t
   653  0769  01F6               	clrf	escribirDato@t+1
   654                           
   655                           ;custom1.c: 130: TRISD = 0xFF;
   656  076A  30FF               	movlw	255
   657  076B  1683               	bsf	3,5	;RP0=1, select bank1
   658  076C  1303               	bcf	3,6	;RP1=0, select bank1
   659  076D  0088               	movwf	8	;volatile
   660  076E  0008               	return
   661  076F                     __end_of_escribirDato:	
   662                           
   663                           	psect	text3
   664  0712                     __ptext3:	
   665 ;; *************** function _comando *****************
   666 ;; Defined at:
   667 ;;		line 81 in file "custom1.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  command         1    wreg     unsigned char 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  command         1    4[COMMON] unsigned char 
   672 ;;  t               2    5[COMMON] int 
   673 ;;  estado          2    2[COMMON] int 
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         5       0       0       0       0
   685 ;;      Temps:          2       0       0       0       0
   686 ;;      Totals:         7       0       0       0       0
   687 ;;Total ram usage:        7 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_main
   693 ;;		_crearCaracter
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           
   698                           ;psect for function _comando
   699  0712                     _comando:	
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _comando: [wreg+status,2+status,0]
   703                           ;comando@command stored from wreg
   704  0712  00F4               	movwf	comando@command
   705                           
   706                           ;custom1.c: 82: int t, estado;
   707                           ;custom1.c: 83: PORTEbits.RE0 = 0;
   708  0713  1283               	bcf	3,5	;RP0=0, select bank0
   709  0714  1303               	bcf	3,6	;RP1=0, select bank0
   710  0715  1009               	bcf	9,0	;volatile
   711                           
   712                           ;custom1.c: 84: t = 0;
   713  0716  01F5               	clrf	comando@t
   714  0717  01F6               	clrf	comando@t+1
   715                           
   716                           ;custom1.c: 85: PORTEbits.RE1 = 1;
   717  0718  1489               	bsf	9,1	;volatile
   718                           
   719                           ;custom1.c: 86: t = 0;
   720  0719  01F5               	clrf	comando@t
   721  071A  01F6               	clrf	comando@t+1
   722  071B                     l656:	
   723                           ;custom1.c: 87: do {
   724                           
   725                           
   726                           ;custom1.c: 88: PORTEbits.RE2 = 1;
   727  071B  1509               	bsf	9,2	;volatile
   728                           
   729                           ;custom1.c: 89: t = 0;
   730  071C  01F5               	clrf	comando@t
   731  071D  01F6               	clrf	comando@t+1
   732                           
   733                           ;custom1.c: 90: estado = (PORTD & 0x80);
   734  071E  0808               	movf	8,w	;volatile
   735  071F  3980               	andlw	128
   736  0720  00F0               	movwf	??_comando
   737  0721  01F1               	clrf	??_comando+1
   738  0722  0870               	movf	??_comando,w
   739  0723  00F2               	movwf	comando@estado
   740  0724  0871               	movf	??_comando+1,w
   741  0725  00F3               	movwf	comando@estado+1
   742                           
   743                           ;custom1.c: 91: PORTEbits.RE2 = 0;
   744  0726  1109               	bcf	9,2	;volatile
   745                           
   746                           ;custom1.c: 92: t = 0;
   747  0727  01F5               	clrf	comando@t
   748  0728  01F6               	clrf	comando@t+1
   749                           
   750                           ;custom1.c: 93: } while (estado != 0);
   751  0729  0872               	movf	comando@estado,w
   752  072A  0473               	iorwf	comando@estado+1,w
   753  072B  1D03               	btfss	3,2
   754  072C  2F1B               	goto	l656
   755                           
   756                           ;custom1.c: 94: PORTEbits.RE1 = 0;
   757  072D  1089               	bcf	9,1	;volatile
   758                           
   759                           ;custom1.c: 95: TRISD = 0x00;
   760  072E  1683               	bsf	3,5	;RP0=1, select bank1
   761  072F  1303               	bcf	3,6	;RP1=0, select bank1
   762  0730  0188               	clrf	8	;volatile
   763                           
   764                           ;custom1.c: 96: PORTD = command;
   765  0731  0874               	movf	comando@command,w
   766  0732  1283               	bcf	3,5	;RP0=0, select bank0
   767  0733  1303               	bcf	3,6	;RP1=0, select bank0
   768  0734  0088               	movwf	8	;volatile
   769                           
   770                           ;custom1.c: 97: PORTEbits.RE2 = 1;
   771  0735  1509               	bsf	9,2	;volatile
   772                           
   773                           ;custom1.c: 98: t = 0;
   774  0736  01F5               	clrf	comando@t
   775  0737  01F6               	clrf	comando@t+1
   776                           
   777                           ;custom1.c: 99: PORTEbits.RE2 = 0;
   778  0738  1109               	bcf	9,2	;volatile
   779                           
   780                           ;custom1.c: 100: t = 0;
   781  0739  01F5               	clrf	comando@t
   782  073A  01F6               	clrf	comando@t+1
   783                           
   784                           ;custom1.c: 101: TRISD = 0xFF;
   785  073B  30FF               	movlw	255
   786  073C  1683               	bsf	3,5	;RP0=1, select bank1
   787  073D  1303               	bcf	3,6	;RP1=0, select bank1
   788  073E  0088               	movwf	8	;volatile
   789  073F  0008               	return
   790  0740                     __end_of_comando:	
   791                           
   792                           	psect	text4
   793  06E5                     __ptext4:	
   794 ;; *************** function _configurarLCD *****************
   795 ;; Defined at:
   796 ;;		line 48 in file "custom1.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  t               2    4[COMMON] int 
   801 ;;  estado          2    2[COMMON] int 
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         4       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0
   814 ;;      Totals:         6       0       0       0       0
   815 ;;Total ram usage:        6 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _configurarLCD
   826  06E5                     _configurarLCD:	
   827                           
   828                           ;custom1.c: 49: int t, estado;
   829                           ;custom1.c: 50: PORTEbits.RE0 = 0;
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _configurarLCD: [wreg+status,2+status,0]
   833  06E5  1283               	bcf	3,5	;RP0=0, select bank0
   834  06E6  1303               	bcf	3,6	;RP1=0, select bank0
   835  06E7  1009               	bcf	9,0	;volatile
   836                           
   837                           ;custom1.c: 51: t = 0;
   838  06E8  01F4               	clrf	configurarLCD@t
   839  06E9  01F5               	clrf	configurarLCD@t+1
   840                           
   841                           ;custom1.c: 52: PORTEbits.RE1 = 1;
   842  06EA  1489               	bsf	9,1	;volatile
   843                           
   844                           ;custom1.c: 53: t = 0;
   845  06EB  01F4               	clrf	configurarLCD@t
   846  06EC  01F5               	clrf	configurarLCD@t+1
   847  06ED                     l716:	
   848                           ;custom1.c: 54: do {
   849                           
   850                           
   851                           ;custom1.c: 55: PORTEbits.RE2 = 1;
   852  06ED  1509               	bsf	9,2	;volatile
   853                           
   854                           ;custom1.c: 56: t = 0;
   855  06EE  01F4               	clrf	configurarLCD@t
   856  06EF  01F5               	clrf	configurarLCD@t+1
   857                           
   858                           ;custom1.c: 57: estado = (PORTD & 0x80);
   859  06F0  0808               	movf	8,w	;volatile
   860  06F1  3980               	andlw	128
   861  06F2  00F0               	movwf	??_configurarLCD
   862  06F3  01F1               	clrf	??_configurarLCD+1
   863  06F4  0870               	movf	??_configurarLCD,w
   864  06F5  00F2               	movwf	configurarLCD@estado
   865  06F6  0871               	movf	??_configurarLCD+1,w
   866  06F7  00F3               	movwf	configurarLCD@estado+1
   867                           
   868                           ;custom1.c: 58: PORTEbits.RE2 = 0;
   869  06F8  1109               	bcf	9,2	;volatile
   870                           
   871                           ;custom1.c: 59: t = 0;
   872  06F9  01F4               	clrf	configurarLCD@t
   873  06FA  01F5               	clrf	configurarLCD@t+1
   874                           
   875                           ;custom1.c: 60: } while (estado != 0);
   876  06FB  0872               	movf	configurarLCD@estado,w
   877  06FC  0473               	iorwf	configurarLCD@estado+1,w
   878  06FD  1D03               	btfss	3,2
   879  06FE  2EED               	goto	l716
   880                           
   881                           ;custom1.c: 61: PORTEbits.RE1 = 0;
   882  06FF  1089               	bcf	9,1	;volatile
   883                           
   884                           ;custom1.c: 62: TRISD = 0x00;
   885  0700  1683               	bsf	3,5	;RP0=1, select bank1
   886  0701  1303               	bcf	3,6	;RP1=0, select bank1
   887  0702  0188               	clrf	8	;volatile
   888                           
   889                           ;custom1.c: 63: PORTD = 0x38;
   890  0703  3038               	movlw	56
   891  0704  1283               	bcf	3,5	;RP0=0, select bank0
   892  0705  1303               	bcf	3,6	;RP1=0, select bank0
   893  0706  0088               	movwf	8	;volatile
   894                           
   895                           ;custom1.c: 64: PORTEbits.RE2 = 1;
   896  0707  1509               	bsf	9,2	;volatile
   897                           
   898                           ;custom1.c: 65: t = 0;
   899  0708  01F4               	clrf	configurarLCD@t
   900  0709  01F5               	clrf	configurarLCD@t+1
   901                           
   902                           ;custom1.c: 66: PORTEbits.RE2 = 0;
   903  070A  1109               	bcf	9,2	;volatile
   904                           
   905                           ;custom1.c: 67: t = 0;
   906  070B  01F4               	clrf	configurarLCD@t
   907  070C  01F5               	clrf	configurarLCD@t+1
   908                           
   909                           ;custom1.c: 68: TRISD = 0xFF;
   910  070D  30FF               	movlw	255
   911  070E  1683               	bsf	3,5	;RP0=1, select bank1
   912  070F  1303               	bcf	3,6	;RP1=0, select bank1
   913  0710  0088               	movwf	8	;volatile
   914  0711  0008               	return
   915  0712                     __end_of_configurarLCD:	
   916  007E                     btemp	set	126	;btemp
   917  007E                     wtemp	set	126
   918  007E                     wtemp0	set	126
   919  0080                     wtemp1	set	128
   920  0082                     wtemp2	set	130
   921  0084                     wtemp3	set	132
   922  0086                     wtemp4	set	134
   923  0088                     wtemp5	set	136
   924  007F                     wtemp6	set	127
   925  007E                     ttemp	set	126
   926  007E                     ttemp0	set	126
   927  0081                     ttemp1	set	129
   928  0084                     ttemp2	set	132
   929  0087                     ttemp3	set	135
   930  007F                     ttemp4	set	127
   931  007E                     ltemp	set	126
   932  007E                     ltemp0	set	126
   933  0082                     ltemp1	set	130
   934  0086                     ltemp2	set	134
   935  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     20      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    crearCaracter@pattern	PTR unsigned char  size(1) Largest target is 8
		 -> main@pattern2(BANK0[8]), main@pattern1(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_crearCaracter
    _crearCaracter->_comando
    _crearCaracter->_escribirDato

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     553
                                              0 BANK0     20    20      0
                            _comando
                      _configurarLCD
                      _crearCaracter
                       _escribirDato
 ---------------------------------------------------------------------------------
 (1) _crearCaracter                                        4     3      1     374
                                              7 COMMON     4     3      1
                            _comando
                       _escribirDato
 ---------------------------------------------------------------------------------
 (1) _escribirDato                                         7     7      0      51
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (2) _comando                                              7     7      0      51
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _configurarLCD                                        6     6      0      29
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _comando
   _configurarLCD
   _crearCaracter
     _comando
     _escribirDato
   _escribirDato

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Nov 22 23:37:19 2018

   crearCaracter@address 0077                        pc 0002           ?_configurarLCD 0070  
                     fsr 0004                      l716 06ED                      l656 071B  
                    l686 0749                      l776 07D1     crearCaracter@pattern 0079  
                    u125 06C2                      u150 0779                      u160 078E  
          comando@estado 0072                      fsr0 0004                      indf 0000  
         comando@command 0074                     _main 076F                     btemp 007E  
                   ltemp 007E                     start 0000                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000            ?_escribirDato 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089            __CFG_PWRTE$ON 0000           __CFG_FCMEN$OFF 0000  
        __end_of_comando 0740             main@pattern1 0024             main@pattern2 002C  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F0          ??_configurarLCD 0070             __end_of_main 07F0  
         ??_escribirDato 0070                   ??_main 0020                ??_comando 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 069D  
   __end_of_escribirDato 076F    __end_of_crearCaracter 06E5               __pmaintext 076F  
         configurarLCD@t 0074       escribirDato@estado 0072                  __ptext1 06BE  
                __ptext2 0740                  __ptext3 0712                  __ptext4 06E5  
                _comando 0712     end_of_initialization 07FC    __end_of_configurarLCD 0712  
          escribirDato@t 0075                _PORTCbits 0007                _PORTEbits 0009  
  __size_of_escribirDato 002F             _escribirDato 0740      start_initialization 07F0  
             init_fetch0 06AD              __pdataBANK0 0034                ___latbits 0002  
          __pcstackBANK0 0020   __CFG_FOSC$INTRC_CLKOUT 0000      configurarLCD@estado 0072  
               ?_comando 0070   __size_of_crearCaracter 0027           crearCaracter@i 007A  
              main@F1716 0034                main@F1718 003C            _crearCaracter 06BE  
       __size_of_comando 002E   __size_of_configurarLCD 002D         escribirDato@data 0074  
          __size_of_main 0081           ?_crearCaracter 0077                 comando@t 0075  
               init_ram0 06B1            _configurarLCD 06E5          ??_crearCaracter 0078  
